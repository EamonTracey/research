{
    "system": "You are a helpful TaskVine coding assistant. Provide strictly the requested code using the ndcctools.taskvine library. The TaskVine user manual is below:\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.17\"/>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n<title>cctools: ndcctools.taskvine.manager.Manager Class Reference</title>\n<link href=\"tabs.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"dynsections.js\"></script>\n<link href=\"navtree.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script type=\"text/javascript\" src=\"resize.js\"></script>\n<script type=\"text/javascript\" src=\"navtreedata.js\"></script>\n<script type=\"text/javascript\" src=\"navtree.js\"></script>\n<link href=\"doxygen.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"doxygen-awesome.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script async type=\"text/javascript\" src=\"/_/static/javascript/readthedocs-addons.js\"></script><meta name=\"readthedocs-project-slug\" content=\"cctools\" /><meta name=\"readthedocs-version-slug\" content=\"latest\" /><meta name=\"readthedocs-resolver-filename\" content=\"/api/html/classndcctools_1_1taskvine_1_1manager_1_1Manager.html\" /><meta name=\"readthedocs-http-status\" content=\"200\" /></head>\n<body>\n<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n<div id=\"titlearea\">\n<table cellspacing=\"0\" cellpadding=\"0\">\n <tbody>\n <tr style=\"height: 56px;\">\n  <td id=\"projectalign\" style=\"padding-left: 0.5em;\">\n   <div id=\"projectname\">cctools\n   </div>\n  </td>\n </tr>\n </tbody>\n</table>\n</div>\n<!-- end header part -->\n<!-- Generated by Doxygen 1.8.17 -->\n<script type=\"text/javascript\" src=\"menudata.js\"></script>\n<script type=\"text/javascript\" src=\"menu.js\"></script>\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\n$(function() {\n  initMenu('',false,false,'search.php','Search');\n});\n/* @license-end */</script>\n<div id=\"main-nav\"></div>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n      <div id=\"nav-sync\" class=\"sync\"></div>\n    </div>\n  </div>\n  <div id=\"splitbar\" style=\"-moz-user-select:none;\" \n       class=\"ui-resizable-handle\">\n  </div>\n</div>\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\n$(document).ready(function(){initNavTree('classndcctools_1_1taskvine_1_1manager_1_1Manager.html',''); initResizable(); });\n/* @license-end */\n</script>\n<div id=\"doc-content\">\n<div class=\"header\">\n  <div class=\"summary\">\n<a href=\"#pub-methods\">Public Member Functions</a>  </div>\n  <div class=\"headertitle\">\n<div class=\"title\">ndcctools.taskvine.manager.Manager Class Reference</div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n<div class=\"dynheader\">\nInheritance diagram for ndcctools.taskvine.manager.Manager:</div>\n<div class=\"dyncontent\">\n <div class=\"center\">\n  <img src=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.png\" usemap=\"#ndcctools.taskvine.manager.Manager_map\" alt=\"\"/>\n  <map id=\"ndcctools.taskvine.manager.Manager_map\" name=\"ndcctools.taskvine.manager.Manager_map\">\n<area href=\"classndcctools_1_1taskvine_1_1dask__executor_1_1DaskVine.html\" alt=\"ndcctools.taskvine.dask_executor.DaskVine\" shape=\"rect\" coords=\"0,112,260,136\"/>\n  </map>\n</div></div>\n<table class=\"memberdecls\">\n<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\nPublic Member Functions</h2></td></tr>\n<tr class=\"memitem:a9bd96d29ce4fd7c55a7799da955ad8eb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a9bd96d29ce4fd7c55a7799da955ad8eb\">__init__</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5650feac98874a310008dd73e1b3af44\">port</a>=<a class=\"el\" href=\"taskvine_8h.html#a5ab5749fc600a75877a74418a5024065\">cvine.VINE_DEFAULT_PORT</a>, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>=None, shutdown=False, run_info_path=&quot;vine-run-info&quot;, staging_path=None, ssl=None, init_fn=None, status_display_interval=None)</td></tr>\n<tr class=\"memdesc:a9bd96d29ce4fd7c55a7799da955ad8eb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Create a new manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a9bd96d29ce4fd7c55a7799da955ad8eb\">More...</a><br /></td></tr>\n<tr class=\"separator:a9bd96d29ce4fd7c55a7799da955ad8eb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ae0aa0d30173e6cd9b6083d23ec75c38a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a> (self)</td></tr>\n<tr class=\"memdesc:ae0aa0d30173e6cd9b6083d23ec75c38a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the project name of the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">More...</a><br /></td></tr>\n<tr class=\"separator:ae0aa0d30173e6cd9b6083d23ec75c38a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a5650feac98874a310008dd73e1b3af44\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5650feac98874a310008dd73e1b3af44\">port</a> (self)</td></tr>\n<tr class=\"memdesc:a5650feac98874a310008dd73e1b3af44\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the listening port of the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5650feac98874a310008dd73e1b3af44\">More...</a><br /></td></tr>\n<tr class=\"separator:a5650feac98874a310008dd73e1b3af44\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aaed94595dbbd308c115b5d87a4099c96\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aaed94595dbbd308c115b5d87a4099c96\">using_ssl</a> (self)</td></tr>\n<tr class=\"memdesc:aaed94595dbbd308c115b5d87a4099c96\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Whether the manager is using ssl to talk to workers.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aaed94595dbbd308c115b5d87a4099c96\">More...</a><br /></td></tr>\n<tr class=\"separator:aaed94595dbbd308c115b5d87a4099c96\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a8dbc11230e29ca61fb452dfeaa7e74d8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8dbc11230e29ca61fb452dfeaa7e74d8\">logging_directory</a> (self)</td></tr>\n<tr class=\"memdesc:a8dbc11230e29ca61fb452dfeaa7e74d8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the logs directory of the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8dbc11230e29ca61fb452dfeaa7e74d8\">More...</a><br /></td></tr>\n<tr class=\"separator:a8dbc11230e29ca61fb452dfeaa7e74d8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aaa5875d104e96d481b374ac7db55ce34\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aaa5875d104e96d481b374ac7db55ce34\">staging_directory</a> (self)</td></tr>\n<tr class=\"memdesc:aaa5875d104e96d481b374ac7db55ce34\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the staging directory of the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aaa5875d104e96d481b374ac7db55ce34\">More...</a><br /></td></tr>\n<tr class=\"separator:aaa5875d104e96d481b374ac7db55ce34\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac19d352ab66412dda2021be097886b1a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac19d352ab66412dda2021be097886b1a\">library_logging_directory</a> (self)</td></tr>\n<tr class=\"memdesc:ac19d352ab66412dda2021be097886b1a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the library logs directory of the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac19d352ab66412dda2021be097886b1a\">More...</a><br /></td></tr>\n<tr class=\"separator:ac19d352ab66412dda2021be097886b1a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aba612d7b3401d1009acea26d1bee0410\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aba612d7b3401d1009acea26d1bee0410\">cache_directory</a> (self)</td></tr>\n<tr class=\"memdesc:aba612d7b3401d1009acea26d1bee0410\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the caching directory of the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aba612d7b3401d1009acea26d1bee0410\">More...</a><br /></td></tr>\n<tr class=\"separator:aba612d7b3401d1009acea26d1bee0410\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a2f72b05475b2a95a38ec261159944719\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a2f72b05475b2a95a38ec261159944719\">stats</a> (self)</td></tr>\n<tr class=\"memdesc:a2f72b05475b2a95a38ec261159944719\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get manager statistics.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a2f72b05475b2a95a38ec261159944719\">More...</a><br /></td></tr>\n<tr class=\"separator:a2f72b05475b2a95a38ec261159944719\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac699164b8c50dae1cc8a468387c6b68d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac699164b8c50dae1cc8a468387c6b68d\">stats_category</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>)</td></tr>\n<tr class=\"memdesc:ac699164b8c50dae1cc8a468387c6b68d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the task statistics for the given category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac699164b8c50dae1cc8a468387c6b68d\">More...</a><br /></td></tr>\n<tr class=\"separator:ac699164b8c50dae1cc8a468387c6b68d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a059d797b653ffb712528876793135b98\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a059d797b653ffb712528876793135b98\">status</a> (self, request)</td></tr>\n<tr class=\"memdesc:a059d797b653ffb712528876793135b98\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get manager information as list of dictionaries.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a059d797b653ffb712528876793135b98\">More...</a><br /></td></tr>\n<tr class=\"separator:a059d797b653ffb712528876793135b98\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a076844f72fefe5e4782ec6fcecf7f23c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a076844f72fefe5e4782ec6fcecf7f23c\">summarize_workers</a> (self)</td></tr>\n<tr class=\"memdesc:a076844f72fefe5e4782ec6fcecf7f23c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get resource statistics of workers connected.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a076844f72fefe5e4782ec6fcecf7f23c\">More...</a><br /></td></tr>\n<tr class=\"separator:a076844f72fefe5e4782ec6fcecf7f23c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:add0ee910e84a96e1bee37f845bec7250\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#add0ee910e84a96e1bee37f845bec7250\">update_catalog</a> (self)</td></tr>\n<tr class=\"memdesc:add0ee910e84a96e1bee37f845bec7250\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Send update to catalog server.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#add0ee910e84a96e1bee37f845bec7250\">More...</a><br /></td></tr>\n<tr class=\"separator:add0ee910e84a96e1bee37f845bec7250\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aabdcd53ed4bfe5994a9c1b7dbd005d6d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aabdcd53ed4bfe5994a9c1b7dbd005d6d\">set_category_mode</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>, mode)</td></tr>\n<tr class=\"memdesc:aabdcd53ed4bfe5994a9c1b7dbd005d6d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Turn on or off first-allocation labeling for a given category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aabdcd53ed4bfe5994a9c1b7dbd005d6d\">More...</a><br /></td></tr>\n<tr class=\"separator:aabdcd53ed4bfe5994a9c1b7dbd005d6d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aa04946a39df82ac5bba06842a83adb29\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aa04946a39df82ac5bba06842a83adb29\">set_category_autolabel_resource</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>, resource, autolabel)</td></tr>\n<tr class=\"memdesc:aa04946a39df82ac5bba06842a83adb29\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Turn on or off first-allocation labeling for a given category and resource.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aa04946a39df82ac5bba06842a83adb29\">More...</a><br /></td></tr>\n<tr class=\"separator:aa04946a39df82ac5bba06842a83adb29\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:adf3894bbad8cd90048f41b81fdfde505\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf3894bbad8cd90048f41b81fdfde505\">task_state</a> (self, task_id)</td></tr>\n<tr class=\"memdesc:adf3894bbad8cd90048f41b81fdfde505\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get current task state.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf3894bbad8cd90048f41b81fdfde505\">More...</a><br /></td></tr>\n<tr class=\"separator:adf3894bbad8cd90048f41b81fdfde505\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:acfbd0a404425cf14fcc8ef703b37a995\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#acfbd0a404425cf14fcc8ef703b37a995\">enable_monitoring</a> (self, watchdog=True, time_series=False)</td></tr>\n<tr class=\"memdesc:acfbd0a404425cf14fcc8ef703b37a995\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Enables resource monitoring for tasks.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#acfbd0a404425cf14fcc8ef703b37a995\">More...</a><br /></td></tr>\n<tr class=\"separator:acfbd0a404425cf14fcc8ef703b37a995\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a8db40f59d78e310f275ee95231bbe9f8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">enable_peer_transfers</a> (self)</td></tr>\n<tr class=\"memdesc:a8db40f59d78e310f275ee95231bbe9f8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Enable P2P worker transfer functionality.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">More...</a><br /></td></tr>\n<tr class=\"separator:a8db40f59d78e310f275ee95231bbe9f8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a175e27c71716671c85ba990e848eb2ac\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a175e27c71716671c85ba990e848eb2ac\">disable_peer_transfers</a> (self)</td></tr>\n<tr class=\"memdesc:a175e27c71716671c85ba990e848eb2ac\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Disable P2P worker transfer functionality.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a175e27c71716671c85ba990e848eb2ac\">More...</a><br /></td></tr>\n<tr class=\"separator:a175e27c71716671c85ba990e848eb2ac\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1a0c9193b4e86f21ecfdb230d25e18d2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1a0c9193b4e86f21ecfdb230d25e18d2\">enable_disconnect_slow_workers</a> (self, multiplier)</td></tr>\n<tr class=\"memdesc:a1a0c9193b4e86f21ecfdb230d25e18d2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Change the project name for the given manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1a0c9193b4e86f21ecfdb230d25e18d2\">More...</a><br /></td></tr>\n<tr class=\"separator:a1a0c9193b4e86f21ecfdb230d25e18d2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a0076e9c0e87a012edad54136293d2bb7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a0076e9c0e87a012edad54136293d2bb7\">enable_disconnect_slow_workers_category</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>, multiplier)</td></tr>\n<tr class=\"memdesc:a0076e9c0e87a012edad54136293d2bb7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Enable disconnect slow workers functionality for a given manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a0076e9c0e87a012edad54136293d2bb7\">More...</a><br /></td></tr>\n<tr class=\"separator:a0076e9c0e87a012edad54136293d2bb7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a9dabca2fd04555009b77569df17b2dc9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a9dabca2fd04555009b77569df17b2dc9\">set_draining_by_hostname</a> (self, hostname, drain_mode=True)</td></tr>\n<tr class=\"memdesc:a9dabca2fd04555009b77569df17b2dc9\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Turn on or off draining mode for workers at hostname.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a9dabca2fd04555009b77569df17b2dc9\">More...</a><br /></td></tr>\n<tr class=\"separator:a9dabca2fd04555009b77569df17b2dc9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac569a9e2fe165109fe248436eb67da60\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac569a9e2fe165109fe248436eb67da60\">empty</a> (self)</td></tr>\n<tr class=\"memdesc:ac569a9e2fe165109fe248436eb67da60\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Determine whether there are any known tasks managerd, running, or waiting to be collected.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac569a9e2fe165109fe248436eb67da60\">More...</a><br /></td></tr>\n<tr class=\"separator:ac569a9e2fe165109fe248436eb67da60\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a78911da0a8fdbd7fa4055dd2c6b06a6d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a78911da0a8fdbd7fa4055dd2c6b06a6d\">hungry</a> (self)</td></tr>\n<tr class=\"memdesc:a78911da0a8fdbd7fa4055dd2c6b06a6d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Determine whether the manager can support more tasks.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a78911da0a8fdbd7fa4055dd2c6b06a6d\">More...</a><br /></td></tr>\n<tr class=\"separator:a78911da0a8fdbd7fa4055dd2c6b06a6d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a70d3c4ccf5b68227e09d1e88656fbfad\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a70d3c4ccf5b68227e09d1e88656fbfad\">set_scheduler</a> (self, scheduler)</td></tr>\n<tr class=\"memdesc:a70d3c4ccf5b68227e09d1e88656fbfad\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the worker selection scheduler for manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a70d3c4ccf5b68227e09d1e88656fbfad\">More...</a><br /></td></tr>\n<tr class=\"separator:a70d3c4ccf5b68227e09d1e88656fbfad\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a4cc53d4acfba7391712f216fb63043d6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a4cc53d4acfba7391712f216fb63043d6\">set_name</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>)</td></tr>\n<tr class=\"memdesc:a4cc53d4acfba7391712f216fb63043d6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Change the project name for the given manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a4cc53d4acfba7391712f216fb63043d6\">More...</a><br /></td></tr>\n<tr class=\"separator:a4cc53d4acfba7391712f216fb63043d6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a83e574b9011addeb9c061c7347ec6203\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a83e574b9011addeb9c061c7347ec6203\">set_manager_preferred_connection</a> (self, mode)</td></tr>\n<tr class=\"memdesc:a83e574b9011addeb9c061c7347ec6203\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the preference for using hostname over IP address to connect.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a83e574b9011addeb9c061c7347ec6203\">More...</a><br /></td></tr>\n<tr class=\"separator:a83e574b9011addeb9c061c7347ec6203\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1532b0ae9056e2c7c83ea042e4229d0a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1532b0ae9056e2c7c83ea042e4229d0a\">set_min_task_id</a> (self, minid)</td></tr>\n<tr class=\"memdesc:a1532b0ae9056e2c7c83ea042e4229d0a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the minimum task_id of future submitted tasks.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1532b0ae9056e2c7c83ea042e4229d0a\">More...</a><br /></td></tr>\n<tr class=\"separator:a1532b0ae9056e2c7c83ea042e4229d0a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a49202f3d18a60bdfc6449575e62d98f6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a49202f3d18a60bdfc6449575e62d98f6\">set_priority</a> (self, priority)</td></tr>\n<tr class=\"memdesc:a49202f3d18a60bdfc6449575e62d98f6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Change the project priority for the given manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a49202f3d18a60bdfc6449575e62d98f6\">More...</a><br /></td></tr>\n<tr class=\"separator:a49202f3d18a60bdfc6449575e62d98f6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a556f170a94d2526e67efd80b7aeac882\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a556f170a94d2526e67efd80b7aeac882\">tasks_left_count</a> (self, ntasks)</td></tr>\n<tr class=\"memdesc:a556f170a94d2526e67efd80b7aeac882\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specify the number of tasks not yet submitted to the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a556f170a94d2526e67efd80b7aeac882\">More...</a><br /></td></tr>\n<tr class=\"separator:a556f170a94d2526e67efd80b7aeac882\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a705aa2e3c79d6b1b467ab8e5645c06bc\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a705aa2e3c79d6b1b467ab8e5645c06bc\">set_catalog_servers</a> (self, catalogs)</td></tr>\n<tr class=\"memdesc:a705aa2e3c79d6b1b467ab8e5645c06bc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specify the catalog servers the manager should report to.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a705aa2e3c79d6b1b467ab8e5645c06bc\">More...</a><br /></td></tr>\n<tr class=\"separator:a705aa2e3c79d6b1b467ab8e5645c06bc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:af1883ce6fec45d2516a2ecf265546ea7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#af1883ce6fec45d2516a2ecf265546ea7\">set_property</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>, value)</td></tr>\n<tr class=\"memdesc:af1883ce6fec45d2516a2ecf265546ea7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a global property to the manager which will be included in periodic reports to the catalog server and other telemetry destinations.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#af1883ce6fec45d2516a2ecf265546ea7\">More...</a><br /></td></tr>\n<tr class=\"separator:af1883ce6fec45d2516a2ecf265546ea7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ad22fc3ee00539b5a977492d1d0f285c0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ad22fc3ee00539b5a977492d1d0f285c0\">set_runtime_info_path</a> (self, dirname)</td></tr>\n<tr class=\"memdesc:ad22fc3ee00539b5a977492d1d0f285c0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specify a directory to write logs and staging files.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ad22fc3ee00539b5a977492d1d0f285c0\">More...</a><br /></td></tr>\n<tr class=\"separator:ad22fc3ee00539b5a977492d1d0f285c0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac67ef28f468a185352613b18a5ee9555\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac67ef28f468a185352613b18a5ee9555\">set_password</a> (self, password)</td></tr>\n<tr class=\"memdesc:ac67ef28f468a185352613b18a5ee9555\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a mandatory password that each worker must present.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac67ef28f468a185352613b18a5ee9555\">More...</a><br /></td></tr>\n<tr class=\"separator:ac67ef28f468a185352613b18a5ee9555\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ad6911631cd2078f056611ba2fb8a0584\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ad6911631cd2078f056611ba2fb8a0584\">set_password_file</a> (self, file)</td></tr>\n<tr class=\"memdesc:ad6911631cd2078f056611ba2fb8a0584\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a mandatory password file that each worker must present.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ad6911631cd2078f056611ba2fb8a0584\">More...</a><br /></td></tr>\n<tr class=\"separator:ad6911631cd2078f056611ba2fb8a0584\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a21d62e50271d3a6768a444a92fd95f16\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a21d62e50271d3a6768a444a92fd95f16\">set_resources_max</a> (self, rmd)</td></tr>\n<tr class=\"memdesc:a21d62e50271d3a6768a444a92fd95f16\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specifies the maximum resources allowed for the default category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a21d62e50271d3a6768a444a92fd95f16\">More...</a><br /></td></tr>\n<tr class=\"separator:a21d62e50271d3a6768a444a92fd95f16\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aed6ec77d4136da6f4893b611369b20db\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aed6ec77d4136da6f4893b611369b20db\">set_resources_min</a> (self, rmd)</td></tr>\n<tr class=\"memdesc:aed6ec77d4136da6f4893b611369b20db\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specifies the minimum resources allowed for the default category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aed6ec77d4136da6f4893b611369b20db\">More...</a><br /></td></tr>\n<tr class=\"separator:aed6ec77d4136da6f4893b611369b20db\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a753d7f52b80658765d7cd6c9c1323ba4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a753d7f52b80658765d7cd6c9c1323ba4\">set_category_resources_max</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>, rmd)</td></tr>\n<tr class=\"memdesc:a753d7f52b80658765d7cd6c9c1323ba4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specifies the maximum resources allowed for the given category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a753d7f52b80658765d7cd6c9c1323ba4\">More...</a><br /></td></tr>\n<tr class=\"separator:a753d7f52b80658765d7cd6c9c1323ba4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a73f4510ab4e3d9ef8b511fba8900c9dc\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a73f4510ab4e3d9ef8b511fba8900c9dc\">set_category_resources_min</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>, rmd)</td></tr>\n<tr class=\"memdesc:a73f4510ab4e3d9ef8b511fba8900c9dc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specifies the minimum resources allowed for the given category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a73f4510ab4e3d9ef8b511fba8900c9dc\">More...</a><br /></td></tr>\n<tr class=\"separator:a73f4510ab4e3d9ef8b511fba8900c9dc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a0db3ed3d07fdae290a5b3e353e9e2419\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a0db3ed3d07fdae290a5b3e353e9e2419\">set_category_first_allocation_guess</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>, rmd)</td></tr>\n<tr class=\"memdesc:a0db3ed3d07fdae290a5b3e353e9e2419\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specifies the first-allocation guess for the given category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a0db3ed3d07fdae290a5b3e353e9e2419\">More...</a><br /></td></tr>\n<tr class=\"separator:a0db3ed3d07fdae290a5b3e353e9e2419\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1e9b59a612844cdb2dd0e1041849ab2a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1e9b59a612844cdb2dd0e1041849ab2a\">set_category_max_concurrent</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>, max_concurrent)</td></tr>\n<tr class=\"memdesc:a1e9b59a612844cdb2dd0e1041849ab2a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specifies the maximum resources allowed for the given category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1e9b59a612844cdb2dd0e1041849ab2a\">More...</a><br /></td></tr>\n<tr class=\"separator:a1e9b59a612844cdb2dd0e1041849ab2a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aacb038f1879baba4d3d987bef41f1e80\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aacb038f1879baba4d3d987bef41f1e80\">initialize_categories</a> (self, filename, rm)</td></tr>\n<tr class=\"memdesc:aacb038f1879baba4d3d987bef41f1e80\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Initialize first value of categories.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aacb038f1879baba4d3d987bef41f1e80\">More...</a><br /></td></tr>\n<tr class=\"separator:aacb038f1879baba4d3d987bef41f1e80\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ad7b07307117c98681d1f8fd8e2e5bfd8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ad7b07307117c98681d1f8fd8e2e5bfd8\">cancel_by_task_id</a> (self, id)</td></tr>\n<tr class=\"memdesc:ad7b07307117c98681d1f8fd8e2e5bfd8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Cancel task identified by its task_id.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ad7b07307117c98681d1f8fd8e2e5bfd8\">More...</a><br /></td></tr>\n<tr class=\"separator:ad7b07307117c98681d1f8fd8e2e5bfd8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aacea29044e4c9f51d2693aa3709b8818\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aacea29044e4c9f51d2693aa3709b8818\">cancel_by_task_tag</a> (self, tag)</td></tr>\n<tr class=\"memdesc:aacea29044e4c9f51d2693aa3709b8818\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Cancel task identified by its tag.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aacea29044e4c9f51d2693aa3709b8818\">More...</a><br /></td></tr>\n<tr class=\"separator:aacea29044e4c9f51d2693aa3709b8818\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:adc2c6d725a7545bf78d51616ef3f4113\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adc2c6d725a7545bf78d51616ef3f4113\">cancel_by_category</a> (self, <a class=\"el\" href=\"structcategory.html\">category</a>)</td></tr>\n<tr class=\"memdesc:adc2c6d725a7545bf78d51616ef3f4113\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Cancel all tasks of the given category.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adc2c6d725a7545bf78d51616ef3f4113\">More...</a><br /></td></tr>\n<tr class=\"separator:adc2c6d725a7545bf78d51616ef3f4113\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a936c9f9758d8550844c89e5b06aebe91\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a936c9f9758d8550844c89e5b06aebe91\">cancel_all</a> (self)</td></tr>\n<tr class=\"memdesc:a936c9f9758d8550844c89e5b06aebe91\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Cancel all tasks.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a936c9f9758d8550844c89e5b06aebe91\">More...</a><br /></td></tr>\n<tr class=\"separator:a936c9f9758d8550844c89e5b06aebe91\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:adf4bddb820b34b74c2073a64b46fdde8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf4bddb820b34b74c2073a64b46fdde8\">workers_shutdown</a> (self, n=0)</td></tr>\n<tr class=\"memdesc:adf4bddb820b34b74c2073a64b46fdde8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Shutdown workers connected to manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf4bddb820b34b74c2073a64b46fdde8\">More...</a><br /></td></tr>\n<tr class=\"separator:adf4bddb820b34b74c2073a64b46fdde8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a228efcc574a6d66f4fef7350e1cc6df3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a228efcc574a6d66f4fef7350e1cc6df3\">block_host</a> (self, host)</td></tr>\n<tr class=\"memdesc:a228efcc574a6d66f4fef7350e1cc6df3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Block workers running on host from working for the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a228efcc574a6d66f4fef7350e1cc6df3\">More...</a><br /></td></tr>\n<tr class=\"separator:a228efcc574a6d66f4fef7350e1cc6df3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ab2bed9dec6827ab0c9862be711c3fd3c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ab2bed9dec6827ab0c9862be711c3fd3c\">blacklist</a> (self, host)</td></tr>\n<tr class=\"memdesc:ab2bed9dec6827ab0c9862be711c3fd3c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Replaced by <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a228efcc574a6d66f4fef7350e1cc6df3\">ndcctools.taskvine.manager.Manager.block_host</a>.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ab2bed9dec6827ab0c9862be711c3fd3c\">More...</a><br /></td></tr>\n<tr class=\"separator:ab2bed9dec6827ab0c9862be711c3fd3c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ae8def6d353ec79a2bdc02cd8af0fc9df\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae8def6d353ec79a2bdc02cd8af0fc9df\">block_host_with_timeout</a> (self, host, timeout)</td></tr>\n<tr class=\"memdesc:ae8def6d353ec79a2bdc02cd8af0fc9df\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Block workers running on host for the duration of the given timeout.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae8def6d353ec79a2bdc02cd8af0fc9df\">More...</a><br /></td></tr>\n<tr class=\"separator:ae8def6d353ec79a2bdc02cd8af0fc9df\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aedc7e6ca276c7cb1e878d1e73e4939de\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aedc7e6ca276c7cb1e878d1e73e4939de\">blacklist_with_timeout</a> (self, host, timeout)</td></tr>\n<tr class=\"memdesc:aedc7e6ca276c7cb1e878d1e73e4939de\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae8def6d353ec79a2bdc02cd8af0fc9df\">ndcctools.taskvine.manager.Manager.block_host_with_timeout</a>.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aedc7e6ca276c7cb1e878d1e73e4939de\">More...</a><br /></td></tr>\n<tr class=\"separator:aedc7e6ca276c7cb1e878d1e73e4939de\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac1ab0d3878af105f97e5133c16ab55c6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac1ab0d3878af105f97e5133c16ab55c6\">unblock_host</a> (self, host=None)</td></tr>\n<tr class=\"memdesc:ac1ab0d3878af105f97e5133c16ab55c6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Unblock given host, of all hosts if host not given.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac1ab0d3878af105f97e5133c16ab55c6\">More...</a><br /></td></tr>\n<tr class=\"separator:ac1ab0d3878af105f97e5133c16ab55c6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:afa5a6cad9bce5eb4359de12633b8ce33\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#afa5a6cad9bce5eb4359de12633b8ce33\">blacklist_clear</a> (self, host=None)</td></tr>\n<tr class=\"memdesc:afa5a6cad9bce5eb4359de12633b8ce33\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac1ab0d3878af105f97e5133c16ab55c6\">ndcctools.taskvine.manager.Manager.unblock_host</a>.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#afa5a6cad9bce5eb4359de12633b8ce33\">More...</a><br /></td></tr>\n<tr class=\"separator:afa5a6cad9bce5eb4359de12633b8ce33\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a9da0560eed63c0c40a70cecb71c74952\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a9da0560eed63c0c40a70cecb71c74952\">set_keepalive_interval</a> (self, interval)</td></tr>\n<tr class=\"memdesc:a9da0560eed63c0c40a70cecb71c74952\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Change keepalive interval for a given manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a9da0560eed63c0c40a70cecb71c74952\">More...</a><br /></td></tr>\n<tr class=\"separator:a9da0560eed63c0c40a70cecb71c74952\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac798720e698b63093663488298d34114\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac798720e698b63093663488298d34114\">set_keepalive_timeout</a> (self, timeout)</td></tr>\n<tr class=\"memdesc:ac798720e698b63093663488298d34114\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Change keepalive timeout for a given manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac798720e698b63093663488298d34114\">More...</a><br /></td></tr>\n<tr class=\"separator:ac798720e698b63093663488298d34114\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aa92a615926720fe69d3232a510ad4f08\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aa92a615926720fe69d3232a510ad4f08\">tune</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>, value)</td></tr>\n<tr class=\"memdesc:aa92a615926720fe69d3232a510ad4f08\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Tune advanced parameters.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aa92a615926720fe69d3232a510ad4f08\">More...</a><br /></td></tr>\n<tr class=\"separator:aa92a615926720fe69d3232a510ad4f08\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a78b81cd0c64881021ce386d134aec3e7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a78b81cd0c64881021ce386d134aec3e7\">submit</a> (self, task)</td></tr>\n<tr class=\"memdesc:a78b81cd0c64881021ce386d134aec3e7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Submit a task to the manager.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a78b81cd0c64881021ce386d134aec3e7\">More...</a><br /></td></tr>\n<tr class=\"separator:a78b81cd0c64881021ce386d134aec3e7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a5e82c2baadc50590d0ed8e394b13420a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5e82c2baadc50590d0ed8e394b13420a\">install_library</a> (self, task)</td></tr>\n<tr class=\"memdesc:a5e82c2baadc50590d0ed8e394b13420a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Submit a library to install on all connected workers.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5e82c2baadc50590d0ed8e394b13420a\">More...</a><br /></td></tr>\n<tr class=\"separator:a5e82c2baadc50590d0ed8e394b13420a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:afb447e25a90b6831146893cf612f96a5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#afb447e25a90b6831146893cf612f96a5\">remove_library</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>)</td></tr>\n<tr class=\"memdesc:afb447e25a90b6831146893cf612f96a5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove a library from all connected workers.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#afb447e25a90b6831146893cf612f96a5\">More...</a><br /></td></tr>\n<tr class=\"separator:afb447e25a90b6831146893cf612f96a5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aee1b8201879d80291defd0ff5c8f8601\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aee1b8201879d80291defd0ff5c8f8601\">check_library_exists</a> (self, library_name)</td></tr>\n<tr class=\"memdesc:aee1b8201879d80291defd0ff5c8f8601\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check whether a libray exists on the manager or not.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aee1b8201879d80291defd0ff5c8f8601\">More...</a><br /></td></tr>\n<tr class=\"separator:aee1b8201879d80291defd0ff5c8f8601\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ae74fc1bfd5c4a9ec7d596f8482192147\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae74fc1bfd5c4a9ec7d596f8482192147\">create_library_from_functions</a> (self, library_name, *function_list, poncho_env=None, init_command=None, add_env=True, hoisting_modules=None, exec_mode='fork', library_context_info=None)</td></tr>\n<tr class=\"memdesc:ae74fc1bfd5c4a9ec7d596f8482192147\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Turn a list of python functions into a Library Task.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae74fc1bfd5c4a9ec7d596f8482192147\">More...</a><br /></td></tr>\n<tr class=\"separator:ae74fc1bfd5c4a9ec7d596f8482192147\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a8b3048e1c42f40dc40eec8952de52454\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8b3048e1c42f40dc40eec8952de52454\">create_library_from_serverized_files</a> (self, library_name, library_path, env=None)</td></tr>\n<tr class=\"memdesc:a8b3048e1c42f40dc40eec8952de52454\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Turn Library code created with poncho_package_serverize into a Library Task.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8b3048e1c42f40dc40eec8952de52454\">More...</a><br /></td></tr>\n<tr class=\"separator:a8b3048e1c42f40dc40eec8952de52454\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a76cde0aeed2e6c10ae525b641241b15c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a76cde0aeed2e6c10ae525b641241b15c\">create_library_from_command</a> (self, executable_path, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>, env=None)</td></tr>\n<tr class=\"memdesc:a76cde0aeed2e6c10ae525b641241b15c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Create a Library task from arbitrary inputs.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a76cde0aeed2e6c10ae525b641241b15c\">More...</a><br /></td></tr>\n<tr class=\"separator:a76cde0aeed2e6c10ae525b641241b15c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:adf1a767c8ca6bf91ddbce463cc9d6766\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">wait</a> (self, timeout=&quot;wait_forever&quot;)</td></tr>\n<tr class=\"memdesc:adf1a767c8ca6bf91ddbce463cc9d6766\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Wait for tasks to complete.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">More...</a><br /></td></tr>\n<tr class=\"separator:adf1a767c8ca6bf91ddbce463cc9d6766\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a69c373f9d4d413a27e1d62b07dd11131\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a69c373f9d4d413a27e1d62b07dd11131\">wait_for_tag</a> (self, tag, timeout=&quot;wait_forever&quot;)</td></tr>\n<tr class=\"memdesc:a69c373f9d4d413a27e1d62b07dd11131\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Similar to <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">ndcctools.taskvine.manager.Manager.wait</a>, but guarantees that the returned task has the specified tag.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a69c373f9d4d413a27e1d62b07dd11131\">More...</a><br /></td></tr>\n<tr class=\"separator:a69c373f9d4d413a27e1d62b07dd11131\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a702ebf97c44694022b7e3b110def385e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a702ebf97c44694022b7e3b110def385e\">wait_for_task_id</a> (self, task_id, timeout=&quot;wait_forever&quot;)</td></tr>\n<tr class=\"memdesc:a702ebf97c44694022b7e3b110def385e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Similar to <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">ndcctools.taskvine.manager.Manager.wait</a>, but guarantees that the returned task has the specified task_id.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a702ebf97c44694022b7e3b110def385e\">More...</a><br /></td></tr>\n<tr class=\"separator:a702ebf97c44694022b7e3b110def385e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aa6f158b7498c991091ca2cfc3115f143\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aa6f158b7498c991091ca2cfc3115f143\">application_info</a> (self)</td></tr>\n<tr class=\"memdesc:aa6f158b7498c991091ca2cfc3115f143\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Should return a dictionary with information for the status display.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aa6f158b7498c991091ca2cfc3115f143\">More...</a><br /></td></tr>\n<tr class=\"separator:aa6f158b7498c991091ca2cfc3115f143\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a68f704314a77901086a9611dcb086e5a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a68f704314a77901086a9611dcb086e5a\">map</a> (self, fn, seq, chunksize=1)</td></tr>\n<tr class=\"memdesc:a68f704314a77901086a9611dcb086e5a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Maps a function to elements in a sequence using taskvine.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a68f704314a77901086a9611dcb086e5a\">More...</a><br /></td></tr>\n<tr class=\"separator:a68f704314a77901086a9611dcb086e5a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ace83b0609530dceb268b746c53a8b80b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ace83b0609530dceb268b746c53a8b80b\">pair</a> (self, fn, seq1, seq2, chunksize=1, env=None)</td></tr>\n<tr class=\"memdesc:ace83b0609530dceb268b746c53a8b80b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the values for a function of each pair from 2 sequences.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ace83b0609530dceb268b746c53a8b80b\">More...</a><br /></td></tr>\n<tr class=\"separator:ace83b0609530dceb268b746c53a8b80b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ab4ca546bad1688b406bd19a2ff95b6dd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ab4ca546bad1688b406bd19a2ff95b6dd\">tree_reduce</a> (self, fn, seq, chunksize=2)</td></tr>\n<tr class=\"memdesc:ab4ca546bad1688b406bd19a2ff95b6dd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reduces a sequence until only one value is left, and then returns that value.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ab4ca546bad1688b406bd19a2ff95b6dd\">More...</a><br /></td></tr>\n<tr class=\"separator:ab4ca546bad1688b406bd19a2ff95b6dd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1e0193d030e8263cff094ffbc4023fa5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1e0193d030e8263cff094ffbc4023fa5\">remote_map</a> (self, fn, seq, library, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>, chunksize=1)</td></tr>\n<tr class=\"memdesc:a1e0193d030e8263cff094ffbc4023fa5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Maps a function to elements in a sequence using taskvine remote task.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1e0193d030e8263cff094ffbc4023fa5\">More...</a><br /></td></tr>\n<tr class=\"separator:a1e0193d030e8263cff094ffbc4023fa5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1c686db6c635f214189dea491a27e7d5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1c686db6c635f214189dea491a27e7d5\">remote_pair</a> (self, fn, seq1, seq2, library, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>, chunksize=1)</td></tr>\n<tr class=\"memdesc:a1c686db6c635f214189dea491a27e7d5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the values for a function of each pair from 2 sequences using remote task.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1c686db6c635f214189dea491a27e7d5\">More...</a><br /></td></tr>\n<tr class=\"separator:a1c686db6c635f214189dea491a27e7d5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:af02d2b2191fae22d571b00e5c74b1a9a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#af02d2b2191fae22d571b00e5c74b1a9a\">remote_tree_reduce</a> (self, fn, seq, library, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae0aa0d30173e6cd9b6083d23ec75c38a\">name</a>, chunksize=2)</td></tr>\n<tr class=\"memdesc:af02d2b2191fae22d571b00e5c74b1a9a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reduces a sequence until only one value is left, and then returns that value.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#af02d2b2191fae22d571b00e5c74b1a9a\">More...</a><br /></td></tr>\n<tr class=\"separator:af02d2b2191fae22d571b00e5c74b1a9a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a82482de2472f559d17d47482a64fafa9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a82482de2472f559d17d47482a64fafa9\">declare_file</a> (self, path, cache=False, peer_transfer=True, unlink_when_done=False)</td></tr>\n<tr class=\"memdesc:a82482de2472f559d17d47482a64fafa9\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file obtained from the local filesystem.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a82482de2472f559d17d47482a64fafa9\">More...</a><br /></td></tr>\n<tr class=\"separator:a82482de2472f559d17d47482a64fafa9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a05888b98513cf8ea13ffe91a1fab1897\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a05888b98513cf8ea13ffe91a1fab1897\">fetch_file</a> (self, file)</td></tr>\n<tr class=\"memdesc:a05888b98513cf8ea13ffe91a1fab1897\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Fetch file contents from the cluster or local disk.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a05888b98513cf8ea13ffe91a1fab1897\">More...</a><br /></td></tr>\n<tr class=\"separator:a05888b98513cf8ea13ffe91a1fab1897\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a06962125571374ead45107527cfd005a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a06962125571374ead45107527cfd005a\">undeclare_file</a> (self, file)</td></tr>\n<tr class=\"memdesc:a06962125571374ead45107527cfd005a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Un-declare a file that was created by <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a82482de2472f559d17d47482a64fafa9\">declare_file</a> or similar methods.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a06962125571374ead45107527cfd005a\">More...</a><br /></td></tr>\n<tr class=\"separator:a06962125571374ead45107527cfd005a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ae38780efc8dda7264c0fd3da618a6e45\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae38780efc8dda7264c0fd3da618a6e45\">undeclare_function</a> (self, fn)</td></tr>\n<tr class=\"memdesc:ae38780efc8dda7264c0fd3da618a6e45\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove the manager's local serialized copy of a function used with <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1PythonTask.html\">PythonTask</a>.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae38780efc8dda7264c0fd3da618a6e45\">More...</a><br /></td></tr>\n<tr class=\"separator:ae38780efc8dda7264c0fd3da618a6e45\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a3b6dacd112eb81a7ca798ab425b0ebca\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a3b6dacd112eb81a7ca798ab425b0ebca\">declare_temp</a> (self)</td></tr>\n<tr class=\"memdesc:a3b6dacd112eb81a7ca798ab425b0ebca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare an anonymous file has no initial content, but is created as the output of a task, and may be consumed by other tasks.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a3b6dacd112eb81a7ca798ab425b0ebca\">More...</a><br /></td></tr>\n<tr class=\"separator:a3b6dacd112eb81a7ca798ab425b0ebca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1af2c1723986029982290a261a183c1a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1af2c1723986029982290a261a183c1a\">declare_url</a> (self, url, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:a1af2c1723986029982290a261a183c1a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file obtained from a remote URL.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1af2c1723986029982290a261a183c1a\">More...</a><br /></td></tr>\n<tr class=\"separator:a1af2c1723986029982290a261a183c1a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a14ec5064e4807adf25c2e1882dab4eea\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a14ec5064e4807adf25c2e1882dab4eea\">declare_buffer</a> (self, <a class=\"el\" href=\"structbuffer.html\">buffer</a>=None, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:a14ec5064e4807adf25c2e1882dab4eea\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file created from a buffer in memory.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a14ec5064e4807adf25c2e1882dab4eea\">More...</a><br /></td></tr>\n<tr class=\"separator:a14ec5064e4807adf25c2e1882dab4eea\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a336a6cdfeb02ba7cd63fac84cae5e09f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a336a6cdfeb02ba7cd63fac84cae5e09f\">declare_minitask</a> (self, minitask, source, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:a336a6cdfeb02ba7cd63fac84cae5e09f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file created by executing a mini-task.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a336a6cdfeb02ba7cd63fac84cae5e09f\">More...</a><br /></td></tr>\n<tr class=\"separator:a336a6cdfeb02ba7cd63fac84cae5e09f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:af4de856470d5824a66693d8fd450bcb0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#af4de856470d5824a66693d8fd450bcb0\">declare_untar</a> (self, tarball, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:af4de856470d5824a66693d8fd450bcb0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file created by by unpacking a tar file.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#af4de856470d5824a66693d8fd450bcb0\">More...</a><br /></td></tr>\n<tr class=\"separator:af4de856470d5824a66693d8fd450bcb0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a6f564e36aca715f94c36fd5fc3486b22\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a6f564e36aca715f94c36fd5fc3486b22\">declare_poncho</a> (self, package, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:a6f564e36aca715f94c36fd5fc3486b22\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file that sets up a poncho environment.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a6f564e36aca715f94c36fd5fc3486b22\">More...</a><br /></td></tr>\n<tr class=\"separator:a6f564e36aca715f94c36fd5fc3486b22\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:addf1601850c80b0f5c7fa982a7f5d12d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#addf1601850c80b0f5c7fa982a7f5d12d\">declare_starch</a> (self, starch, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:addf1601850c80b0f5c7fa982a7f5d12d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file create a file by unpacking a starch package.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#addf1601850c80b0f5c7fa982a7f5d12d\">More...</a><br /></td></tr>\n<tr class=\"separator:addf1601850c80b0f5c7fa982a7f5d12d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a80a7960761d49edead67c48f46c06c64\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a80a7960761d49edead67c48f46c06c64\">declare_xrootd</a> (self, source, proxy=None, env=None, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:a80a7960761d49edead67c48f46c06c64\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file from accessible from an xrootd server.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a80a7960761d49edead67c48f46c06c64\">More...</a><br /></td></tr>\n<tr class=\"separator:a80a7960761d49edead67c48f46c06c64\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a8e5fad918763b12cbf38e5b967af692f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8e5fad918763b12cbf38e5b967af692f\">declare_chirp</a> (self, server, source, ticket=None, env=None, cache=False, peer_transfer=True)</td></tr>\n<tr class=\"memdesc:a8e5fad918763b12cbf38e5b967af692f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Declare a file from accessible from an xrootd server.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8e5fad918763b12cbf38e5b967af692f\">More...</a><br /></td></tr>\n<tr class=\"separator:a8e5fad918763b12cbf38e5b967af692f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a56191c67489c1b261ebb581641d33b64\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a56191c67489c1b261ebb581641d33b64\">log_txn_app</a> (self, entry)</td></tr>\n<tr class=\"memdesc:a56191c67489c1b261ebb581641d33b64\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds a custom APPLICATION entry to the transactions log.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a56191c67489c1b261ebb581641d33b64\">More...</a><br /></td></tr>\n<tr class=\"separator:a56191c67489c1b261ebb581641d33b64\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:acef29bd3436adf2cb1351447625b5967\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#acef29bd3436adf2cb1351447625b5967\">log_debug_app</a> (self, entry)</td></tr>\n<tr class=\"memdesc:acef29bd3436adf2cb1351447625b5967\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds a custom APPLICATION entry to the debug log.  <a href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#acef29bd3436adf2cb1351447625b5967\">More...</a><br /></td></tr>\n<tr class=\"separator:acef29bd3436adf2cb1351447625b5967\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table>\n<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n<a id=\"a9bd96d29ce4fd7c55a7799da955ad8eb\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a9bd96d29ce4fd7c55a7799da955ad8eb\">&#9670;&nbsp;</a></span>__init__()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.__init__ </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>port</em> = <code><a class=\"el\" href=\"taskvine_8h.html#a5ab5749fc600a75877a74418a5024065\">cvine.VINE_DEFAULT_PORT</a></code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>shutdown</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>run_info_path</em> = <code>&quot;vine-run-info&quot;</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>staging_path</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>ssl</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>init_fn</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>status_display_interval</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Create a new manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">port</td><td>The port number to listen on. If zero, then a random port is chosen. A range of possible ports (low, hight) can be also specified instead of a single integer. Default is 9123 </td></tr>\n    <tr><td class=\"paramname\">name</td><td>The project name to use. </td></tr>\n    <tr><td class=\"paramname\">shutdown</td><td>Automatically shutdown workers when manager is finished. Disabled by default. </td></tr>\n    <tr><td class=\"paramname\">run_info_path</td><td>Directory to write log (and staging if staging_path not given) files per run. If None, defaults to \"vine-run-info\" </td></tr>\n    <tr><td class=\"paramname\">staging_path</td><td>Directory to write temporary files. Defaults to run_info_path if not given. </td></tr>\n    <tr><td class=\"paramname\">ssl</td><td>A tuple of filenames (ssl_key, ssl_cert) in pem format, or True. If not given, then TSL is not activated. If True, a self-signed temporary key and cert are generated. </td></tr>\n    <tr><td class=\"paramname\">init_fn</td><td>Function applied to the newly created manager at initialization. </td></tr>\n    <tr><td class=\"paramname\">status_display_interval</td><td>Number of seconds between updates to the jupyter status display. None, or less than 1 disables it.</td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"taskvine_8h.html#a47ac70464e357e4dfcb0722fee6c44a0\" title=\"Create a new manager.\">vine_create</a> - For more information about environmental variables that affect the behavior this method. </dd></dl>\n\n</div>\n</div>\n<h2 class=\"groupheader\">Member Function Documentation</h2>\n<a id=\"ae0aa0d30173e6cd9b6083d23ec75c38a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ae0aa0d30173e6cd9b6083d23ec75c38a\">&#9670;&nbsp;</a></span>name()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.name </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the project name of the manager. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(q.name)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a5650feac98874a310008dd73e1b3af44\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a5650feac98874a310008dd73e1b3af44\">&#9670;&nbsp;</a></span>port()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.port </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the listening port of the manager. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(q.port)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"aaed94595dbbd308c115b5d87a4099c96\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aaed94595dbbd308c115b5d87a4099c96\">&#9670;&nbsp;</a></span>using_ssl()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.using_ssl </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Whether the manager is using ssl to talk to workers. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(q.using_ssl)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a8dbc11230e29ca61fb452dfeaa7e74d8\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a8dbc11230e29ca61fb452dfeaa7e74d8\">&#9670;&nbsp;</a></span>logging_directory()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.logging_directory </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the logs directory of the manager. </p>\n\n</div>\n</div>\n<a id=\"aaa5875d104e96d481b374ac7db55ce34\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aaa5875d104e96d481b374ac7db55ce34\">&#9670;&nbsp;</a></span>staging_directory()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.staging_directory </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the staging directory of the manager. </p>\n\n</div>\n</div>\n<a id=\"ac19d352ab66412dda2021be097886b1a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ac19d352ab66412dda2021be097886b1a\">&#9670;&nbsp;</a></span>library_logging_directory()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.library_logging_directory </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the library logs directory of the manager. </p>\n\n</div>\n</div>\n<a id=\"aba612d7b3401d1009acea26d1bee0410\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aba612d7b3401d1009acea26d1bee0410\">&#9670;&nbsp;</a></span>cache_directory()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.cache_directory </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the caching directory of the manager. </p>\n\n</div>\n</div>\n<a id=\"a2f72b05475b2a95a38ec261159944719\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a2f72b05475b2a95a38ec261159944719\">&#9670;&nbsp;</a></span>stats()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.stats </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get manager statistics. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(q.stats)</div>\n</div><!-- fragment --><p> The fields in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a2f72b05475b2a95a38ec261159944719\">ndcctools.taskvine.manager.Manager.stats</a> can also be individually accessed through this call. For example: </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(q.stats.workers_busy)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"ac699164b8c50dae1cc8a468387c6b68d\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ac699164b8c50dae1cc8a468387c6b68d\">&#9670;&nbsp;</a></span>stats_category()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.stats_category </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the task statistics for the given category. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>A category name. For example: <div class=\"fragment\"><div class=\"line\">s = q.stats_category(<span class=\"stringliteral\">&quot;my_category&quot;</span>)</div>\n<div class=\"line\">&gt;&gt;&gt; print(s)</div>\n</div><!-- fragment --> The fields in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a2f72b05475b2a95a38ec261159944719\">ndcctools.taskvine.manager.Manager.stats</a> can also be individually accessed through this call. For example: <div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(s.tasks_waiting)</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a059d797b653ffb712528876793135b98\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a059d797b653ffb712528876793135b98\">&#9670;&nbsp;</a></span>status()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.status </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>request</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get manager information as list of dictionaries. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object </td></tr>\n    <tr><td class=\"paramname\">request</td><td>One of: \"manager\", \"tasks\", \"workers\", or \"categories\" For example: <div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">import</span> json</div>\n<div class=\"line\">tasks_info = q.status(<span class=\"stringliteral\">&quot;tasks&quot;</span>)</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a076844f72fefe5e4782ec6fcecf7f23c\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a076844f72fefe5e4782ec6fcecf7f23c\">&#9670;&nbsp;</a></span>summarize_workers()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.summarize_workers </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get resource statistics of workers connected. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A list of dictionaries that indicate how many .workers connected with a certain number of .cores, .memory, and disk. For example: <div class=\"fragment\"><div class=\"line\">workers = q.summarize_workers()</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"keywordflow\">for</span> w <span class=\"keywordflow\">in</span> workers:</div>\n<div class=\"line\">&gt;&gt;&gt;    print(<span class=\"stringliteral\">&quot;{} workers with: {} cores, {} MB memory, {} MB disk&quot;</span>.format(w.workers, w.cores, w.memory, w.disk)</div>\n</div><!-- fragment --> </dd></dl>\n\n</div>\n</div>\n<a id=\"add0ee910e84a96e1bee37f845bec7250\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#add0ee910e84a96e1bee37f845bec7250\">&#9670;&nbsp;</a></span>update_catalog()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.update_catalog </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Send update to catalog server. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aabdcd53ed4bfe5994a9c1b7dbd005d6d\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aabdcd53ed4bfe5994a9c1b7dbd005d6d\">&#9670;&nbsp;</a></span>set_category_mode()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_category_mode </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>mode</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Turn on or off first-allocation labeling for a given category. </p>\n<p>By default, only cores, memory, and disk are labeled, and gpus are unlabeled. NOTE: autolabeling is only meaningfull when task monitoring is enabled (<a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#acfbd0a404425cf14fcc8ef703b37a995\">ndcctools.taskvine.manager.Manager.enable_monitoring</a>). When monitoring is enabled and a task exhausts resources in a worker, mode dictates how taskvine handles the exhaustion: </p><dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>A category name. If None, sets the mode by default for newly created categories. </td></tr>\n    <tr><td class=\"paramname\">mode</td><td>One of:<ul>\n<li>\"fixed\" Task fails (default).</li>\n<li>\"max\" If maximum values are specified for cores, memory, disk, and gpus (e.g. via <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a753d7f52b80658765d7cd6c9c1323ba4\">ndcctools.taskvine.manager.Manager.set_category_resources_max</a> or <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a7c1f594d80915948c60541b2a93d72c6\">ndcctools.taskvine.task.Task.set_memory</a>), and one of those resources is exceeded, the task fails. Otherwise it is retried until a large enough worker connects to the manager, using the maximum values specified, and the maximum values so far seen for resources not specified. Use <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aeb566587b3e4827c69b6022667246e36\">ndcctools.taskvine.task.Task.set_retries</a> to set a limit on the number of times manager attemps to complete the task.</li>\n<li>\"min waste\" As above, but manager tries allocations to minimize resource waste.</li>\n<li>\"max throughput\" As above, but manager tries allocations to maximize throughput. </li>\n</ul>\n</td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aa04946a39df82ac5bba06842a83adb29\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aa04946a39df82ac5bba06842a83adb29\">&#9670;&nbsp;</a></span>set_category_autolabel_resource()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_category_autolabel_resource </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>resource</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>autolabel</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Turn on or off first-allocation labeling for a given category and resource. </p>\n<p>This function should be use to fine-tune the defaults from <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#aabdcd53ed4bfe5994a9c1b7dbd005d6d\">ndcctools.taskvine.manager.Manager.set_category_mode</a>. </p><dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>A category name. </td></tr>\n    <tr><td class=\"paramname\">resource</td><td>A resource name. </td></tr>\n    <tr><td class=\"paramname\">autolabel</td><td>True/False for on/off. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>1 if resource is valid, 0 otherwise. </dd></dl>\n\n</div>\n</div>\n<a id=\"adf3894bbad8cd90048f41b81fdfde505\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#adf3894bbad8cd90048f41b81fdfde505\">&#9670;&nbsp;</a></span>task_state()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.task_state </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>task_id</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get current task state. </p>\n<p>See vine_task_state_t for possible values. </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(q.task_state(task_id))</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"acfbd0a404425cf14fcc8ef703b37a995\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#acfbd0a404425cf14fcc8ef703b37a995\">&#9670;&nbsp;</a></span>enable_monitoring()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.enable_monitoring </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>watchdog</em> = <code>True</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>time_series</em> = <code>False</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Enables resource monitoring for tasks. </p>\n<p>The resources measured are available in the resources_measured member of the respective vine_task. </p><dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">watchdog</td><td>If not 0, kill tasks that exhaust declared resources. </td></tr>\n    <tr><td class=\"paramname\">time_series</td><td>If not 0, generate a time series of resources per task in VINE_RUNTIME_INFO_DIR/vine-logs/time-series/ (WARNING: for long running tasks these files may reach gigabyte sizes. This function is mostly used for debugging.)</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>Returns 1 on success, 0 on failure (i.e., monitoring was not enabled). </p>\n\n</div>\n</div>\n<a id=\"a8db40f59d78e310f275ee95231bbe9f8\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a8db40f59d78e310f275ee95231bbe9f8\">&#9670;&nbsp;</a></span>enable_peer_transfers()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.enable_peer_transfers </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Enable P2P worker transfer functionality. </p>\n<p>On by default</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a175e27c71716671c85ba990e848eb2ac\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a175e27c71716671c85ba990e848eb2ac\">&#9670;&nbsp;</a></span>disable_peer_transfers()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.disable_peer_transfers </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Disable P2P worker transfer functionality. </p>\n<p>On by default</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a1a0c9193b4e86f21ecfdb230d25e18d2\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1a0c9193b4e86f21ecfdb230d25e18d2\">&#9670;&nbsp;</a></span>enable_disconnect_slow_workers()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.enable_disconnect_slow_workers </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>multiplier</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Change the project name for the given manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>Enable disconnect slow workers functionality for a given manager for tasks in the \"default\" category, and for task which category does not set an explicit multiplier.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">multiplier</td><td>The multiplier of the average task time at which point to disconnect a worker; if less than 1, it is disabled (default). </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a0076e9c0e87a012edad54136293d2bb7\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a0076e9c0e87a012edad54136293d2bb7\">&#9670;&nbsp;</a></span>enable_disconnect_slow_workers_category()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.enable_disconnect_slow_workers_category </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>multiplier</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Enable disconnect slow workers functionality for a given manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>Name of the category. </td></tr>\n    <tr><td class=\"paramname\">multiplier</td><td>The multiplier of the average task time at which point to disconnect a worker; disabled if less than one (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1a0c9193b4e86f21ecfdb230d25e18d2\">ndcctools.taskvine.manager.Manager.enable_disconnect_slow_workers</a>) </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a9dabca2fd04555009b77569df17b2dc9\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a9dabca2fd04555009b77569df17b2dc9\">&#9670;&nbsp;</a></span>set_draining_by_hostname()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_draining_by_hostname </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>hostname</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>drain_mode</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Turn on or off draining mode for workers at hostname. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">hostname</td><td>The hostname the host running the workers. </td></tr>\n    <tr><td class=\"paramname\">drain_mode</td><td>If True, no new tasks are dispatched to workers at hostname, and empty workers are shutdown. Else, workers works as usual. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ac569a9e2fe165109fe248436eb67da60\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ac569a9e2fe165109fe248436eb67da60\">&#9670;&nbsp;</a></span>empty()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.empty </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Determine whether there are any known tasks managerd, running, or waiting to be collected. </p>\n<p>Returns 0 if there are tasks remaining in the system, 1 if the system is \"empty\".</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a78911da0a8fdbd7fa4055dd2c6b06a6d\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a78911da0a8fdbd7fa4055dd2c6b06a6d\">&#9670;&nbsp;</a></span>hungry()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.hungry </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Determine whether the manager can support more tasks. </p>\n<p>Returns the number of additional tasks it can support if \"hungry\" and 0 if \"sated\".</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a70d3c4ccf5b68227e09d1e88656fbfad\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a70d3c4ccf5b68227e09d1e88656fbfad\">&#9670;&nbsp;</a></span>set_scheduler()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_scheduler </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>scheduler</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the worker selection scheduler for manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">scheduler</td><td>One of the following schedulers to use in assigning a task to a worker. See <a class=\"el\" href=\"taskvine_8h.html#a3f4aeba658e9800a612580a4aba01c11\">vine_schedule_t</a> for possible values. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a4cc53d4acfba7391712f216fb63043d6\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a4cc53d4acfba7391712f216fb63043d6\">&#9670;&nbsp;</a></span>set_name()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_name </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Change the project name for the given manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>The new project name. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a83e574b9011addeb9c061c7347ec6203\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a83e574b9011addeb9c061c7347ec6203\">&#9670;&nbsp;</a></span>set_manager_preferred_connection()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_manager_preferred_connection </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>mode</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the preference for using hostname over IP address to connect. </p>\n<p>'by_ip' uses IP addresses from the network interfaces of the manager (standard behavior), 'by_hostname' to use the hostname at the manager, or 'by_apparent_ip' to use the address of the manager as seen by the catalog server.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">mode</td><td>An string to indicate using 'by_ip', 'by_hostname' or 'by_apparent_ip'. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a1532b0ae9056e2c7c83ea042e4229d0a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1532b0ae9056e2c7c83ea042e4229d0a\">&#9670;&nbsp;</a></span>set_min_task_id()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_min_task_id </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>minid</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the minimum task_id of future submitted tasks. </p>\n<p>Further submitted tasks are guaranteed to have a task_id larger or equal to minid. This function is useful to make task_ids consistent in a workflow that consists of sequential managers. (Note: This function is rarely used). If the minimum id provided is smaller than the last task_id computed, the minimum id provided is ignored.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">minid</td><td>Minimum desired task_id </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>Returns the actual minimum task_id for future tasks. </dd></dl>\n\n</div>\n</div>\n<a id=\"a49202f3d18a60bdfc6449575e62d98f6\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a49202f3d18a60bdfc6449575e62d98f6\">&#9670;&nbsp;</a></span>set_priority()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_priority </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>priority</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Change the project priority for the given manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">priority</td><td>An integer that presents the priorty of this manager manager. The higher the value, the higher the priority. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a556f170a94d2526e67efd80b7aeac882\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a556f170a94d2526e67efd80b7aeac882\">&#9670;&nbsp;</a></span>tasks_left_count()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.tasks_left_count </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>ntasks</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specify the number of tasks not yet submitted to the manager. </p>\n<p>It is used by vine_factory to determine the number of workers to launch. If not specified, it defaults to 0. vine_factory considers the number of tasks as: num tasks left + num tasks running + num tasks read. </p><dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">ntasks</td><td>Number of tasks yet to be submitted. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a705aa2e3c79d6b1b467ab8e5645c06bc\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a705aa2e3c79d6b1b467ab8e5645c06bc\">&#9670;&nbsp;</a></span>set_catalog_servers()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_catalog_servers </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>catalogs</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specify the catalog servers the manager should report to. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">catalogs</td><td>The catalog servers given as a comma delimited list of hostnames or hostname:port </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"af1883ce6fec45d2516a2ecf265546ea7\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#af1883ce6fec45d2516a2ecf265546ea7\">&#9670;&nbsp;</a></span>set_property()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_property </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>value</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Add a global property to the manager which will be included in periodic reports to the catalog server and other telemetry destinations. </p>\n<p>This is helpful for distinguishing higher level information about the entire run, such as the name of the framework being used, or the logical name of the dataset being processed. </p><dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">m</td><td>A manager object </td></tr>\n    <tr><td class=\"paramname\">name</td><td>The name of the property. </td></tr>\n    <tr><td class=\"paramname\">value</td><td>The value of the property. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ad22fc3ee00539b5a977492d1d0f285c0\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ad22fc3ee00539b5a977492d1d0f285c0\">&#9670;&nbsp;</a></span>set_runtime_info_path()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_runtime_info_path </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>dirname</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specify a directory to write logs and staging files. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">dirname</td><td>A directory name </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ac67ef28f468a185352613b18a5ee9555\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ac67ef28f468a185352613b18a5ee9555\">&#9670;&nbsp;</a></span>set_password()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_password </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>password</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Add a mandatory password that each worker must present. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">password</td><td>The password. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ad6911631cd2078f056611ba2fb8a0584\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ad6911631cd2078f056611ba2fb8a0584\">&#9670;&nbsp;</a></span>set_password_file()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_password_file </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>file</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Add a mandatory password file that each worker must present. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">file</td><td>Name of the file containing the password. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a21d62e50271d3a6768a444a92fd95f16\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a21d62e50271d3a6768a444a92fd95f16\">&#9670;&nbsp;</a></span>set_resources_max()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_resources_max </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>rmd</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specifies the maximum resources allowed for the default category. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">rmd</td><td>Dictionary indicating maximum values. See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a> for possible fields. For example: <div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A maximum of 4 cores is found on any worker:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_resources_max({<span class=\"stringliteral\">&#39;cores&#39;</span>: 4})</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A maximum of 8 cores, 1GB of memory, and 10GB disk are found on any worker:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_resources_max({<span class=\"stringliteral\">&#39;cores&#39;</span>: 8, <span class=\"stringliteral\">&#39;memory&#39;</span>:  1024, <span class=\"stringliteral\">&#39;disk&#39;</span>: 10240})</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aed6ec77d4136da6f4893b611369b20db\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aed6ec77d4136da6f4893b611369b20db\">&#9670;&nbsp;</a></span>set_resources_min()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_resources_min </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>rmd</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specifies the minimum resources allowed for the default category. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">rmd</td><td>Dictionary indicating minimum values. See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a> for possible fields. For example: <div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A minimum of 2 cores is found on any worker:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_resources_min({<span class=\"stringliteral\">&#39;cores&#39;</span>: 2})</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A minimum of 4 cores, 512MB of memory, and 1GB disk are found on any worker:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_resources_min({<span class=\"stringliteral\">&#39;cores&#39;</span>: 4, <span class=\"stringliteral\">&#39;memory&#39;</span>:  512, <span class=\"stringliteral\">&#39;disk&#39;</span>: 1024})</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a753d7f52b80658765d7cd6c9c1323ba4\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a753d7f52b80658765d7cd6c9c1323ba4\">&#9670;&nbsp;</a></span>set_category_resources_max()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_category_resources_max </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>rmd</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specifies the maximum resources allowed for the given category. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>Name of the category. </td></tr>\n    <tr><td class=\"paramname\">rmd</td><td>Dictionary indicating maximum values. See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a> for possible fields. For example: <div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A maximum of 4 cores may be used by a task in the category:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_category_resources_max(<span class=\"stringliteral\">&quot;my_category&quot;</span>, {<span class=\"stringliteral\">&#39;cores&#39;</span>: 4})</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A maximum of 8 cores, 1GB of memory, and 10GB may be used by a task:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_category_resources_max(<span class=\"stringliteral\">&quot;my_category&quot;</span>, {<span class=\"stringliteral\">&#39;cores&#39;</span>: 8, <span class=\"stringliteral\">&#39;memory&#39;</span>:  1024, <span class=\"stringliteral\">&#39;disk&#39;</span>: 10240})</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a73f4510ab4e3d9ef8b511fba8900c9dc\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a73f4510ab4e3d9ef8b511fba8900c9dc\">&#9670;&nbsp;</a></span>set_category_resources_min()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_category_resources_min </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>rmd</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specifies the minimum resources allowed for the given category. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>Name of the category. </td></tr>\n    <tr><td class=\"paramname\">rmd</td><td>Dictionary indicating minimum values. See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a> for possible fields. For example: <div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A minimum of 2 cores is found on any worker:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_category_resources_min(<span class=\"stringliteral\">&quot;my_category&quot;</span>, {<span class=\"stringliteral\">&#39;cores&#39;</span>: 2})</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># A minimum of 4 cores, 512MB of memory, and 1GB disk are found on any worker:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_category_resources_min(<span class=\"stringliteral\">&quot;my_category&quot;</span>, {<span class=\"stringliteral\">&#39;cores&#39;</span>: 4, <span class=\"stringliteral\">&#39;memory&#39;</span>:  512, <span class=\"stringliteral\">&#39;disk&#39;</span>: 1024})</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a0db3ed3d07fdae290a5b3e353e9e2419\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a0db3ed3d07fdae290a5b3e353e9e2419\">&#9670;&nbsp;</a></span>set_category_first_allocation_guess()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_category_first_allocation_guess </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>rmd</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specifies the first-allocation guess for the given category. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>Name of the category. </td></tr>\n    <tr><td class=\"paramname\">rmd</td><td>Dictionary indicating maximum values. See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a> for possible fields. For example: <div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># Tasks are first tried with 4 cores:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_category_first_allocation_guess(<span class=\"stringliteral\">&quot;my_category&quot;</span>, {<span class=\"stringliteral\">&#39;cores&#39;</span>: 4})</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># Tasks are first tried with 8 cores, 1GB of memory, and 10GB:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_category_first_allocation_guess(<span class=\"stringliteral\">&quot;my_category&quot;</span>, {<span class=\"stringliteral\">&#39;cores&#39;</span>: 8, <span class=\"stringliteral\">&#39;memory&#39;</span>:  1024, <span class=\"stringliteral\">&#39;disk&#39;</span>: 10240})</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a1e9b59a612844cdb2dd0e1041849ab2a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1e9b59a612844cdb2dd0e1041849ab2a\">&#9670;&nbsp;</a></span>set_category_max_concurrent()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_category_max_concurrent </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>max_concurrent</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Specifies the maximum resources allowed for the given category. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current work queue object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>Name of the category. </td></tr>\n    <tr><td class=\"paramname\">max_concurrent</td><td>Number of maximum concurrent tasks. Less then 0 means unlimited (this is the default). For example: <div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># Do not run more than 5 tasks of &quot;my_category&quot; concurrently:</span></div>\n<div class=\"line\">&gt;&gt;&gt; q.set_category_max_concurrent(<span class=\"stringliteral\">&quot;my_category&quot;</span>, 5)</div>\n</div><!-- fragment --> </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aacb038f1879baba4d3d987bef41f1e80\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aacb038f1879baba4d3d987bef41f1e80\">&#9670;&nbsp;</a></span>initialize_categories()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.initialize_categories </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>filename</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>rm</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Initialize first value of categories. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">rm</td><td>Dictionary indicating maximum values. See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a> for possible fields. </td></tr>\n    <tr><td class=\"paramname\">filename</td><td>JSON file with resource summaries. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ad7b07307117c98681d1f8fd8e2e5bfd8\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ad7b07307117c98681d1f8fd8e2e5bfd8\">&#9670;&nbsp;</a></span>cancel_by_task_id()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.cancel_by_task_id </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>id</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Cancel task identified by its task_id. </p>\n<p>The cancelled task will be returned in the normal way via <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">wait</a> with a result of VINE_RESULT_CANCELLED.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">id</td><td>The task_id returned from <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a78b81cd0c64881021ce386d134aec3e7\">ndcctools.taskvine.manager.Manager.submit</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>One if the task was found and cancelled, zero otherwise. </dd></dl>\n\n</div>\n</div>\n<a id=\"aacea29044e4c9f51d2693aa3709b8818\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aacea29044e4c9f51d2693aa3709b8818\">&#9670;&nbsp;</a></span>cancel_by_task_tag()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.cancel_by_task_tag </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>tag</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Cancel task identified by its tag. </p>\n<p>The cancelled task will be returned in the normal way via <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">wait</a> with a result of VINE_RESULT_CANCELLED.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">tag</td><td>The tag assigned to task using <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a81291c32ed6e6de44db06728f2442330\">ndcctools.taskvine.task.Task.set_tag</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>One if the task was found and cancelled, zero otherwise. </dd></dl>\n\n</div>\n</div>\n<a id=\"adc2c6d725a7545bf78d51616ef3f4113\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#adc2c6d725a7545bf78d51616ef3f4113\">&#9670;&nbsp;</a></span>cancel_by_category()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.cancel_by_category </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>category</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Cancel all tasks of the given category. </p>\n<p>The cancelled tasks will be returned in the normal way via <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">wait</a> with a result of VINE_RESULT_CANCELLED.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">category</td><td>The name of the category to cancel. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>The total number of tasks cancelled. </dd></dl>\n\n</div>\n</div>\n<a id=\"a936c9f9758d8550844c89e5b06aebe91\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a936c9f9758d8550844c89e5b06aebe91\">&#9670;&nbsp;</a></span>cancel_all()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.cancel_all </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Cancel all tasks. </p>\n<p>The cancelled tasks will be returned in the normal way via <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">wait</a> with a result of VINE_RESULT_CANCELLED.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>The total number of tasks cancelled. </dd></dl>\n\n</div>\n</div>\n<a id=\"adf4bddb820b34b74c2073a64b46fdde8\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#adf4bddb820b34b74c2073a64b46fdde8\">&#9670;&nbsp;</a></span>workers_shutdown()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.workers_shutdown </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>n</em> = <code>0</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Shutdown workers connected to manager. </p>\n<p>Gives a best effort and then returns the number of workers given the shutdown order.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">n</td><td>The number to shutdown. 0 shutdowns all workers </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a228efcc574a6d66f4fef7350e1cc6df3\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a228efcc574a6d66f4fef7350e1cc6df3\">&#9670;&nbsp;</a></span>block_host()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.block_host </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>host</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Block workers running on host from working for the manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">host</td><td>The hostname the host running the workers. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ab2bed9dec6827ab0c9862be711c3fd3c\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ab2bed9dec6827ab0c9862be711c3fd3c\">&#9670;&nbsp;</a></span>blacklist()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.blacklist </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>host</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Replaced by <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a228efcc574a6d66f4fef7350e1cc6df3\">ndcctools.taskvine.manager.Manager.block_host</a>. </p>\n\n</div>\n</div>\n<a id=\"ae8def6d353ec79a2bdc02cd8af0fc9df\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ae8def6d353ec79a2bdc02cd8af0fc9df\">&#9670;&nbsp;</a></span>block_host_with_timeout()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.block_host_with_timeout </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>host</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>timeout</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Block workers running on host for the duration of the given timeout. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">host</td><td>The hostname the host running the workers. </td></tr>\n    <tr><td class=\"paramname\">timeout</td><td>How long this block entry lasts (in seconds). If less than 1, block indefinitely. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aedc7e6ca276c7cb1e878d1e73e4939de\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aedc7e6ca276c7cb1e878d1e73e4939de\">&#9670;&nbsp;</a></span>blacklist_with_timeout()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.blacklist_with_timeout </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>host</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>timeout</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ae8def6d353ec79a2bdc02cd8af0fc9df\">ndcctools.taskvine.manager.Manager.block_host_with_timeout</a>. </p>\n\n</div>\n</div>\n<a id=\"ac1ab0d3878af105f97e5133c16ab55c6\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ac1ab0d3878af105f97e5133c16ab55c6\">&#9670;&nbsp;</a></span>unblock_host()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.unblock_host </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>host</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Unblock given host, of all hosts if host not given. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">host</td><td>The of the hostname the host. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"afa5a6cad9bce5eb4359de12633b8ce33\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#afa5a6cad9bce5eb4359de12633b8ce33\">&#9670;&nbsp;</a></span>blacklist_clear()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.blacklist_clear </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>host</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#ac1ab0d3878af105f97e5133c16ab55c6\">ndcctools.taskvine.manager.Manager.unblock_host</a>. </p>\n\n</div>\n</div>\n<a id=\"a9da0560eed63c0c40a70cecb71c74952\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a9da0560eed63c0c40a70cecb71c74952\">&#9670;&nbsp;</a></span>set_keepalive_interval()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_keepalive_interval </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>interval</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Change keepalive interval for a given manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">interval</td><td>Minimum number of seconds to wait before sending new keepalive checks to workers. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ac798720e698b63093663488298d34114\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ac798720e698b63093663488298d34114\">&#9670;&nbsp;</a></span>set_keepalive_timeout()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.set_keepalive_timeout </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>timeout</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Change keepalive timeout for a given manager. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">timeout</td><td>Minimum number of seconds to wait for a keepalive response from worker before marking it as dead. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aa92a615926720fe69d3232a510ad4f08\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aa92a615926720fe69d3232a510ad4f08\">&#9670;&nbsp;</a></span>tune()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.tune </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>value</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Tune advanced parameters. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>The name fo the parameter to tune. Can be one of following:<ul>\n<li>\"attempt-schedule-depth\" The amount of tasks to attempt scheduling on each pass of send_one_task in the main loop. (default=100)</li>\n<li>\"category-steady-n-tasks\" Set the number of tasks considered when computing category buckets.</li>\n<li>\"default-transfer-rate\" The assumed network bandwidth used until sufficient data has been collected. (1MB/s)</li>\n<li>\"disconnect-slow-workers-factor\" Set the multiplier of the average task time at which point to disconnect a worker; disabled if less than 1. (default=0)</li>\n<li>\"hungry-minimum\" Mimimum number of tasks to consider manager not hungry. (default=10)</li>\n<li>\"hungry-minimum-factor\" Queue is hungry if number of waiting tasks is less than hungry-minumum-factor x (number of workers) | 2 |</li>\n<li>\"immediate-recovery\" If set to 1, create recovery tasks for temporary files as soon as their worker disconnects. Otherwise, create recovery tasks only if the temporary files are used as input when trying to dispatch another task.</li>\n<li>\"keepalive-interval\" Set the minimum number of seconds to wait before sending new keepalive checks to workers. (default=300)</li>\n<li>\"keepalive-timeout\" Set the minimum number of seconds to wait for a keepalive response from worker before marking it as dead. (default=30)</li>\n<li>\"long-timeout\" Set the minimum timeout in seconds when sending a large message to a single worker. (default=3600)</li>\n<li>\"max-retrievals\" Sets the max number of tasks to retrieve per manager <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\" title=\"Wait for tasks to complete.\">wait()</a>. If less than 1, the manager prefers to retrieve all completed tasks before dispatching new tasks to workers. (default=1)</li>\n<li>\"min-transfer-timeout\" Set the minimum number of seconds to wait for files to be transferred to or from a worker. (default=10)</li>\n<li>\"monitor-interval\" Parameter to change how frequently the resource monitor records resource consumption of a task in a times series, if this feature is enabled. See <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#acfbd0a404425cf14fcc8ef703b37a995\">enable_monitoring</a>.</li>\n<li>\"prefer-dispatch\" If 1, try to dispatch tasks even if there are retrieved tasks ready to be reported as done. (default=0)</li>\n<li>\"proportional-resources\" If set to 0, do not assign resources proportionally to tasks. The default is to use proportions.</li>\n<li>\"proportional-whole-tasks\" Round up resource proportions such that only an integer number of tasks could be fit in the worker. The default is to use proportions.</li>\n<li>\"ramp-down-heuristic\" If set to 1 and there are more workers than tasks waiting, then tasks are allocated all the free resources of a worker large enough to run them. If monitoring watchdog is not enabled, then this heuristic has no effect. (default=0)</li>\n<li>\"resource-submit-multiplier\" Treat each worker as having ({cores,memory,gpus} * multiplier) when submitting tasks. This allows for tasks to wait at a worker rather than the manager. (default = 1.0)</li>\n<li>\"short-timeout\" Set the minimum timeout when sending a brief message to a single worker. (default=5s)</li>\n<li>\"transfer-outlier-factor\" Transfer that are this many times slower than the average will be terminated. (default=10x)</li>\n<li>\"transfer-replica-per-cycle\" Number of replicas to schedule per file per iteration. (default=1)</li>\n<li>\"transfer-temps-recovery\" If 1, try to replicate temp files to reach threshold on worker removal. (default=0)</li>\n<li>\"transient-error-interval\" Time to wait in seconds after a resource failure before attempting to use it again. (default=15)</li>\n<li>\"wait-for-workers\" Mimimum number of workers to connect before starting dispatching tasks. (default=0)</li>\n<li>\"wait-retrieve-many\" If set to 0, cvine.vine_wait breaks out of the while loop whenever a task changes to \"task_done\" (wait_retrieve_one mode). If set to 1, vine_wait does not break, but continues recieving and dispatching tasks. This occurs until no task is sent or recieved, at which case it breaks out of the while loop (wait_retrieve_many mode). (default=0)</li>\n<li>\"worker-retrievals\" If 1, retrieve all completed tasks from a worker when retrieving results, even if going above the parameter max-retrievals . Otherwise, if 0, retrieve just one task before deciding to dispatch new tasks or connect new workers. (default=1)</li>\n<li>\"watch-library-logfiles\" If 1, watch the output files produced by each of the library processes running on the remote workers, take them back the current logging directory. (default=0) </li>\n</ul>\n</td></tr>\n    <tr><td class=\"paramname\">value</td><td>The value to set the parameter to. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>0 on succes, -1 on failure. </dd></dl>\n\n</div>\n</div>\n<a id=\"a78b81cd0c64881021ce386d134aec3e7\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a78b81cd0c64881021ce386d134aec3e7\">&#9670;&nbsp;</a></span>submit()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.submit </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>task</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Submit a task to the manager. </p>\n<p>It is safe to re-submit a task returned by <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">ndcctools.taskvine.manager.Manager.wait</a>.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">task</td><td>A task description created from <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html\">ndcctools.taskvine.task.Task</a>. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a5e82c2baadc50590d0ed8e394b13420a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a5e82c2baadc50590d0ed8e394b13420a\">&#9670;&nbsp;</a></span>install_library()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.install_library </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>task</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Submit a library to install on all connected workers. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">task</td><td>A Library Task description created from create_library_from_functions or create_library_from_files </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"afb447e25a90b6831146893cf612f96a5\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#afb447e25a90b6831146893cf612f96a5\">&#9670;&nbsp;</a></span>remove_library()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.remove_library </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Remove a library from all connected workers. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>Name of the library to be removed. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aee1b8201879d80291defd0ff5c8f8601\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aee1b8201879d80291defd0ff5c8f8601\">&#9670;&nbsp;</a></span>check_library_exists()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.check_library_exists </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library_name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Check whether a libray exists on the manager or not. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">library_name</td><td>Name of the library to be checked </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ae74fc1bfd5c4a9ec7d596f8482192147\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ae74fc1bfd5c4a9ec7d596f8482192147\">&#9670;&nbsp;</a></span>create_library_from_functions()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.create_library_from_functions </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library_name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">*&#160;</td>\n          <td class=\"paramname\"><em>function_list</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>poncho_env</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>init_command</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>add_env</em> = <code>True</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>hoisting_modules</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>exec_mode</em> = <code>'fork'</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library_context_info</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Turn a list of python functions into a Library Task. </p>\n<p>This Library Task will be run on a worker as a regular task. Note that functions are required to have source code available, so dynamically generated functions won't work (e.g., lambda, interactive).</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">library_name</td><td>Name of the Library to be created </td></tr>\n    <tr><td class=\"paramname\">function_list</td><td>List of all functions to be included in the library </td></tr>\n    <tr><td class=\"paramname\">poncho_env</td><td>Name of an already prepared poncho environment or a conda environment </td></tr>\n    <tr><td class=\"paramname\">init_command</td><td>A string describing a shell command to execute before the library task is run </td></tr>\n    <tr><td class=\"paramname\">add_env</td><td>Whether to automatically create and/or add environment to the library </td></tr>\n    <tr><td class=\"paramname\">hoisting_modules</td><td>A list of modules imported at the preamble of library, including packages, functions and classes. </td></tr>\n    <tr><td class=\"paramname\">exec_mode</td><td>Execution mode that the library should use to run function calls. Either 'direct' or 'fork' </td></tr>\n    <tr><td class=\"paramname\">library_context_info</td><td>A list containing [library_context_func, library_context_args, library_context_kwargs]. Used to create the library context on remote nodes. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A task to be used with <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5e82c2baadc50590d0ed8e394b13420a\">ndcctools.taskvine.manager.Manager.install_library</a>. </dd></dl>\n\n</div>\n</div>\n<a id=\"a8b3048e1c42f40dc40eec8952de52454\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a8b3048e1c42f40dc40eec8952de52454\">&#9670;&nbsp;</a></span>create_library_from_serverized_files()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.create_library_from_serverized_files </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library_name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library_path</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>env</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Turn Library code created with poncho_package_serverize into a Library Task. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">library_name</td><td>Name that identifies this library to the FunctionCalls </td></tr>\n    <tr><td class=\"paramname\">library_path</td><td>Filename of the library (i.e., the output of poncho_package_serverize) </td></tr>\n    <tr><td class=\"paramname\">env</td><td>Environment to run the library. Either a vine file that expands to an environment (see ndcctools.taskvine.task.Task.add_environment), or a path to a poncho environment. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A task to be used with <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5e82c2baadc50590d0ed8e394b13420a\">ndcctools.taskvine.manager.Manager.install_library</a>. </dd></dl>\n\n</div>\n</div>\n<a id=\"a76cde0aeed2e6c10ae525b641241b15c\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a76cde0aeed2e6c10ae525b641241b15c\">&#9670;&nbsp;</a></span>create_library_from_command()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.create_library_from_command </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>executable_path</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>env</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Create a Library task from arbitrary inputs. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object </td></tr>\n    <tr><td class=\"paramname\">executable_path</td><td>Filename of the library executable </td></tr>\n    <tr><td class=\"paramname\">name</td><td>Name of the library to be created </td></tr>\n    <tr><td class=\"paramname\">env</td><td>Environment to run the library. Either a vine file that expands to an environment (see ndcctools.taskvine.task.Task.add_environment), or a path to a poncho environment. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A task to be used with <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a5e82c2baadc50590d0ed8e394b13420a\">ndcctools.taskvine.manager.Manager.install_library</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"adf1a767c8ca6bf91ddbce463cc9d6766\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#adf1a767c8ca6bf91ddbce463cc9d6766\">&#9670;&nbsp;</a></span>wait()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.wait </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>timeout</em> = <code>&quot;wait_forever&quot;</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Wait for tasks to complete. </p>\n<p>This call will block until the timeout has elapsed</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">timeout</td><td>The number of seconds to wait for a completed task before returning. Use an integer to set the timeout or the value \"wait_forever\" to block until a task has completed. If 0, return immediately with a complete task if one available, or None otherwise. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a69c373f9d4d413a27e1d62b07dd11131\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a69c373f9d4d413a27e1d62b07dd11131\">&#9670;&nbsp;</a></span>wait_for_tag()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.wait_for_tag </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>tag</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>timeout</em> = <code>&quot;wait_forever&quot;</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Similar to <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">ndcctools.taskvine.manager.Manager.wait</a>, but guarantees that the returned task has the specified tag. </p>\n<p>This call will block until the timeout has elapsed.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">tag</td><td>Desired tag. If None, then it is equivalent to self.wait(timeout) </td></tr>\n    <tr><td class=\"paramname\">timeout</td><td>The number of seconds to wait for a completed task before returning. If 0, return immediately with a complete task if one available, or None otherwise. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a702ebf97c44694022b7e3b110def385e\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a702ebf97c44694022b7e3b110def385e\">&#9670;&nbsp;</a></span>wait_for_task_id()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.wait_for_task_id </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>task_id</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>timeout</em> = <code>&quot;wait_forever&quot;</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Similar to <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#adf1a767c8ca6bf91ddbce463cc9d6766\">ndcctools.taskvine.manager.Manager.wait</a>, but guarantees that the returned task has the specified task_id. </p>\n<p>This call will block until the timeout has elapsed.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">task_id</td><td>Desired task_id. If -1, then it is equivalent to self.wait(timeout) </td></tr>\n    <tr><td class=\"paramname\">timeout</td><td>The number of seconds to wait for a completed task before returning. If 0, return immediately with a complete task if one available, or None otherwise. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aa6f158b7498c991091ca2cfc3115f143\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aa6f158b7498c991091ca2cfc3115f143\">&#9670;&nbsp;</a></span>application_info()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.application_info </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Should return a dictionary with information for the status display. </p>\n<p>This method is meant to be overriden by custom applications.</p>\n<p>The dictionary should be of the form:</p>\n<p>{ \"application_info\" : {\"values\" : dict, \"units\" : dict} }</p>\n<p>where \"units\" is an optional dictionary that indicates the units of the corresponding key in \"values\".</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current work queue object.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>For example: </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; myapp.application_info()</div>\n<div class=\"line\">{<span class=\"stringliteral\">&#39;application_info&#39;</span>: {<span class=\"stringliteral\">&#39;values&#39;</span>: {<span class=\"stringliteral\">&#39;size_max_output&#39;</span>: 0.361962, <span class=\"stringliteral\">&#39;current_chunksize&#39;</span>: 65536}, <span class=\"stringliteral\">&#39;units&#39;</span>: {<span class=\"stringliteral\">&#39;size_max_output&#39;</span>: <span class=\"stringliteral\">&#39;MB&#39;</span>}}}</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a68f704314a77901086a9611dcb086e5a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a68f704314a77901086a9611dcb086e5a\">&#9670;&nbsp;</a></span>map()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.map </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>fn</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>chunksize</em> = <code>1</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Maps a function to elements in a sequence using taskvine. </p>\n<p>Similar to regular map function in python</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">fn</td><td>The function that will be called on each element </td></tr>\n    <tr><td class=\"paramname\">seq</td><td>The sequence that will call the function </td></tr>\n    <tr><td class=\"paramname\">chunksize</td><td>The number of elements to process at once </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ace83b0609530dceb268b746c53a8b80b\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ace83b0609530dceb268b746c53a8b80b\">&#9670;&nbsp;</a></span>pair()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.pair </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>fn</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq1</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq2</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>chunksize</em> = <code>1</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>env</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Returns the values for a function of each pair from 2 sequences. </p>\n<p>The pairs that are passed into the function are generated by itertools</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">fn</td><td>The function that will be called on each element </td></tr>\n    <tr><td class=\"paramname\">seq1</td><td>The first seq that will be used to generate pairs </td></tr>\n    <tr><td class=\"paramname\">seq2</td><td>The second seq that will be used to generate pairs </td></tr>\n    <tr><td class=\"paramname\">chunksize</td><td>Number of pairs to process at once (default is 1) </td></tr>\n    <tr><td class=\"paramname\">env</td><td>Filename of a python environment tarball (conda or poncho) </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ab4ca546bad1688b406bd19a2ff95b6dd\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ab4ca546bad1688b406bd19a2ff95b6dd\">&#9670;&nbsp;</a></span>tree_reduce()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.tree_reduce </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>fn</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>chunksize</em> = <code>2</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Reduces a sequence until only one value is left, and then returns that value. </p>\n<p>The sequence is reduced by passing a pair of elements into a function and then stores the result. It then makes a sequence from the results, and reduces again until one value is left.</p>\n<p>If the sequence has an odd length, the last element gets reduced at the end.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">fn</td><td>The function that will be called on each element </td></tr>\n    <tr><td class=\"paramname\">seq</td><td>The seq that will be reduced </td></tr>\n    <tr><td class=\"paramname\">chunksize</td><td>The number of elements per Task (for tree reduc, must be greater than 1) </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a1e0193d030e8263cff094ffbc4023fa5\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1e0193d030e8263cff094ffbc4023fa5\">&#9670;&nbsp;</a></span>remote_map()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.remote_map </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>fn</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>chunksize</em> = <code>1</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Maps a function to elements in a sequence using taskvine remote task. </p>\n<p>Similar to regular map function in python, but creates a task to execute each function on a worker running a library</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">fn</td><td>The function that will be called on each element. This function exists in library. </td></tr>\n    <tr><td class=\"paramname\">seq</td><td>The sequence that will call the function </td></tr>\n    <tr><td class=\"paramname\">library</td><td>The name of the library that contains the function fn. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>This defines the key in the event json that wraps the data sent to the library. </td></tr>\n    <tr><td class=\"paramname\">chunksize</td><td>The number of elements to process at once </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a1c686db6c635f214189dea491a27e7d5\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1c686db6c635f214189dea491a27e7d5\">&#9670;&nbsp;</a></span>remote_pair()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.remote_pair </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>fn</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq1</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq2</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>chunksize</em> = <code>1</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Returns the values for a function of each pair from 2 sequences using remote task. </p>\n<p>The pairs that are passed into the function are generated by itertools</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">fn</td><td>The function that will be called on each element. This function exists in library. </td></tr>\n    <tr><td class=\"paramname\">seq1</td><td>The first seq that will be used to generate pairs </td></tr>\n    <tr><td class=\"paramname\">seq2</td><td>The second seq that will be used to generate pairs </td></tr>\n    <tr><td class=\"paramname\">library</td><td>The name of the library that contains the function fn. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>This defines the key in the event json that wraps the data sent to the library. </td></tr>\n    <tr><td class=\"paramname\">chunksize</td><td>The number of elements to process at once </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"af02d2b2191fae22d571b00e5c74b1a9a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#af02d2b2191fae22d571b00e5c74b1a9a\">&#9670;&nbsp;</a></span>remote_tree_reduce()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.remote_tree_reduce </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>fn</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>seq</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>chunksize</em> = <code>2</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Reduces a sequence until only one value is left, and then returns that value. </p>\n<p>The sequence is reduced by passing a pair of elements into a function and then stores the result. It then makes a sequence from the results, and reduces again until one value is left. Executes on library</p>\n<p>If the sequence has an odd length, the last element gets reduced at the end.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current manager object. </td></tr>\n    <tr><td class=\"paramname\">fn</td><td>The function that will be called on each element. Exists on the library </td></tr>\n    <tr><td class=\"paramname\">seq</td><td>The seq that will be reduced </td></tr>\n    <tr><td class=\"paramname\">library</td><td>The name of the library that contains the function fn. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>This defines the key in the event json that wraps the data sent to the library. </td></tr>\n    <tr><td class=\"paramname\">chunksize</td><td>The number of elements per Task (for tree reduc, must be greater than 1) </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a82482de2472f559d17d47482a64fafa9\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a82482de2472f559d17d47482a64fafa9\">&#9670;&nbsp;</a></span>declare_file()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_file </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>path</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>unlink_when_done</em> = <code>False</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file obtained from the local filesystem. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">path</td><td>The path to the local file </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n    <tr><td class=\"paramname\">unlink_when_done</td><td>Whether to delete the file when its reference count is 0. (Warning: Only use on files produced by the application, and never on irreplaceable input files.) </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> or <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ae6c51fe9286081d53c28d2e767b0a26c\">ndcctools.taskvine.task.Task.add_output</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"a05888b98513cf8ea13ffe91a1fab1897\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a05888b98513cf8ea13ffe91a1fab1897\">&#9670;&nbsp;</a></span>fetch_file()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.fetch_file </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>file</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Fetch file contents from the cluster or local disk. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">file</td><td>The file object </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>The contents of the file as a strong. </dd></dl>\n\n</div>\n</div>\n<a id=\"a06962125571374ead45107527cfd005a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a06962125571374ead45107527cfd005a\">&#9670;&nbsp;</a></span>undeclare_file()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.undeclare_file </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>file</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Un-declare a file that was created by <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a82482de2472f559d17d47482a64fafa9\">declare_file</a> or similar methods. </p>\n<p>The given file or directory object is deleted from all worker's caches, and is no longer available for use as an input file. Completed tasks waiting for retrieval are not affected. Note that all declared files are automatically undeclared by <a class=\"el\" href=\"taskvine_8h.html#a4d43b4fbaa1d9a521ada5cb5f4490611\">vine_delete</a>, however this function can be used for earlier cleanup of unneeded file objects.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">file</td><td>The file object </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ae38780efc8dda7264c0fd3da618a6e45\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ae38780efc8dda7264c0fd3da618a6e45\">&#9670;&nbsp;</a></span>undeclare_function()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.undeclare_function </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>fn</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Remove the manager's local serialized copy of a function used with <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1PythonTask.html\">PythonTask</a>. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">fn</td><td>The function that the manager should forget. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a3b6dacd112eb81a7ca798ab425b0ebca\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a3b6dacd112eb81a7ca798ab425b0ebca\">&#9670;&nbsp;</a></span>declare_temp()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_temp </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare an anonymous file has no initial content, but is created as the output of a task, and may be consumed by other tasks. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> or <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ae6c51fe9286081d53c28d2e767b0a26c\">ndcctools.taskvine.task.Task.add_output</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"a1af2c1723986029982290a261a183c1a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1af2c1723986029982290a261a183c1a\">&#9670;&nbsp;</a></span>declare_url()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_url </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>url</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file obtained from a remote URL. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">url</td><td>The url of the file. </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"a14ec5064e4807adf25c2e1882dab4eea\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a14ec5064e4807adf25c2e1882dab4eea\">&#9670;&nbsp;</a></span>declare_buffer()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_buffer </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>buffer</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file created from a buffer in memory. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">buffer</td><td>The contents of the buffer, or None for an empty output buffer </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a></dd></dl>\n<p>For example: </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; s = <span class=\"stringliteral\">&quot;hello pirate \u2646&quot;</span></div>\n<div class=\"line\">&gt;&gt;&gt; f = m.declare_buffer(bytes(s, <span class=\"stringliteral\">&quot;utf-8&quot;</span>))</div>\n<div class=\"line\">&gt;&gt;&gt; print(bytes.decode(f.contents(), <span class=\"stringliteral\">&quot;utf-8&quot;</span>))</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"stringliteral\">&quot;hello pirate \u2646&quot;</span></div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a336a6cdfeb02ba7cd63fac84cae5e09f\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a336a6cdfeb02ba7cd63fac84cae5e09f\">&#9670;&nbsp;</a></span>declare_minitask()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_minitask </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>minitask</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>source</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file created by executing a mini-task. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">minitask</td><td>The task to execute in order to produce a file </td></tr>\n    <tr><td class=\"paramname\">source</td><td>The name of the file to extract from the task's sandbox. </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"af4de856470d5824a66693d8fd450bcb0\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#af4de856470d5824a66693d8fd450bcb0\">&#9670;&nbsp;</a></span>declare_untar()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_untar </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>tarball</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file created by by unpacking a tar file. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">tarball</td><td>The file object to un-tar </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"a6f564e36aca715f94c36fd5fc3486b22\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a6f564e36aca715f94c36fd5fc3486b22\">&#9670;&nbsp;</a></span>declare_poncho()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_poncho </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>package</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file that sets up a poncho environment. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">package</td><td>The poncho environment tarball. Either a vine file or a string representing a local file. </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"addf1601850c80b0f5c7fa982a7f5d12d\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#addf1601850c80b0f5c7fa982a7f5d12d\">&#9670;&nbsp;</a></span>declare_starch()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_starch </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>starch</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file create a file by unpacking a starch package. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file </td></tr>\n    <tr><td class=\"paramname\">starch</td><td>The startch .sfx file. Either a vine file or a string representing a local file. </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"a80a7960761d49edead67c48f46c06c64\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a80a7960761d49edead67c48f46c06c64\">&#9670;&nbsp;</a></span>declare_xrootd()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_xrootd </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>source</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>proxy</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>env</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file from accessible from an xrootd server. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file. </td></tr>\n    <tr><td class=\"paramname\">source</td><td>The URL address of the root file in text form as: \"root://XROOTSERVER[:port]//path/to/file\" </td></tr>\n    <tr><td class=\"paramname\">proxy</td><td>A <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1file_1_1File.html\">ndcctools.taskvine.file.File</a> of the X509 proxy to use. If None, the environment variable X509_USER_PROXY and the file \"$TMPDIR/$UID\" are considered in that order. If no proxy is present, the transfer is tried without authentication. </td></tr>\n    <tr><td class=\"paramname\">env</td><td>If not None, an environment file (e.g poncho or starch, see ndcctools.taskvine.task.Task.add_environment) that contains the xrootd executables. Otherwise assume xrootd is available at the worker. </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"a8e5fad918763b12cbf38e5b967af692f\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a8e5fad918763b12cbf38e5b967af692f\">&#9670;&nbsp;</a></span>declare_chirp()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.declare_chirp </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>server</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>source</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>ticket</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>env</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cache</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>peer_transfer</em> = <code>True</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Declare a file from accessible from an xrootd server. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file. </td></tr>\n    <tr><td class=\"paramname\">server</td><td>The chirp server address of the form \"hostname[:port\"]\" </td></tr>\n    <tr><td class=\"paramname\">source</td><td>The name of the file in the server </td></tr>\n    <tr><td class=\"paramname\">ticket</td><td>If not None, a file object that provides a chirp an authentication ticket </td></tr>\n    <tr><td class=\"paramname\">env</td><td>If not None, an environment file (e.g poncho or starch) that contains the chirp executables. Otherwise assume chirp is available at the worker. </td></tr>\n    <tr><td class=\"paramname\">cache</td><td>If True or 'workflow', cache the file at workers for reuse until the end of the workflow. If 'worker', the file is cache until the end-of-life of the worker. If 'forever', the file is cached beyond the end-of-life of the worker. Default is False (file is not cached). </td></tr>\n    <tr><td class=\"paramname\">peer_transfer</td><td>Whether the file can be transfered between workers when peer transfers are enabled (see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a8db40f59d78e310f275ee95231bbe9f8\">ndcctools.taskvine.manager.Manager.enable_peer_transfers</a>). Default is True. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>A file object to use in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </dd></dl>\n\n</div>\n</div>\n<a id=\"a56191c67489c1b261ebb581641d33b64\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a56191c67489c1b261ebb581641d33b64\">&#9670;&nbsp;</a></span>log_txn_app()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.log_txn_app </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>entry</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Adds a custom APPLICATION entry to the transactions log. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file. </td></tr>\n    <tr><td class=\"paramname\">server</td><td>A custom transaction message </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"acef29bd3436adf2cb1351447625b5967\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#acef29bd3436adf2cb1351447625b5967\">&#9670;&nbsp;</a></span>log_debug_app()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.manager.Manager.log_debug_app </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>entry</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Adds a custom APPLICATION entry to the debug log. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>The manager to register this file. </td></tr>\n    <tr><td class=\"paramname\">server</td><td>A custom debug message </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<hr/>The documentation for this class was generated from the following file:<ul>\n<li>manager.py</li>\n</ul>\n</div><!-- contents -->\n</div><!-- doc-content -->\n<!-- start footer part -->\n<div id=\"nav-path\" class=\"navpath\"><!-- id is needed for treeview function! -->\n  <ul>\n    <li class=\"navelem\"><a class=\"el\" href=\"namespacendcctools.html\">ndcctools</a></li><li class=\"navelem\"><a class=\"el\" href=\"namespacendcctools_1_1taskvine.html\">taskvine</a></li><li class=\"navelem\"><a class=\"el\" href=\"namespacendcctools_1_1taskvine_1_1manager.html\">manager</a></li><li class=\"navelem\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html\">Manager</a></li>\n    <li class=\"footer\">Generated by\n    <a href=\"http://www.doxygen.org/index.html\">\n    <img class=\"footer\" src=\"doxygen.png\" alt=\"doxygen\"/></a> 1.8.17 </li>\n  </ul>\n</div>\n</body>\n</html>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.17\"/>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n<title>cctools: ndcctools.taskvine.task.Task Class Reference</title>\n<link href=\"tabs.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"dynsections.js\"></script>\n<link href=\"navtree.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script type=\"text/javascript\" src=\"resize.js\"></script>\n<script type=\"text/javascript\" src=\"navtreedata.js\"></script>\n<script type=\"text/javascript\" src=\"navtree.js\"></script>\n<link href=\"doxygen.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"doxygen-awesome.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script async type=\"text/javascript\" src=\"/_/static/javascript/readthedocs-addons.js\"></script><meta name=\"readthedocs-project-slug\" content=\"cctools\" /><meta name=\"readthedocs-version-slug\" content=\"latest\" /><meta name=\"readthedocs-resolver-filename\" content=\"/api/html/classndcctools_1_1taskvine_1_1task_1_1Task.html\" /><meta name=\"readthedocs-http-status\" content=\"200\" /></head>\n<body>\n<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n<div id=\"titlearea\">\n<table cellspacing=\"0\" cellpadding=\"0\">\n <tbody>\n <tr style=\"height: 56px;\">\n  <td id=\"projectalign\" style=\"padding-left: 0.5em;\">\n   <div id=\"projectname\">cctools\n   </div>\n  </td>\n </tr>\n </tbody>\n</table>\n</div>\n<!-- end header part -->\n<!-- Generated by Doxygen 1.8.17 -->\n<script type=\"text/javascript\" src=\"menudata.js\"></script>\n<script type=\"text/javascript\" src=\"menu.js\"></script>\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\n$(function() {\n  initMenu('',false,false,'search.php','Search');\n});\n/* @license-end */</script>\n<div id=\"main-nav\"></div>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n      <div id=\"nav-sync\" class=\"sync\"></div>\n    </div>\n  </div>\n  <div id=\"splitbar\" style=\"-moz-user-select:none;\" \n       class=\"ui-resizable-handle\">\n  </div>\n</div>\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\n$(document).ready(function(){initNavTree('classndcctools_1_1taskvine_1_1task_1_1Task.html',''); initResizable(); });\n/* @license-end */\n</script>\n<div id=\"doc-content\">\n<div class=\"header\">\n  <div class=\"summary\">\n<a href=\"#pub-methods\">Public Member Functions</a>  </div>\n  <div class=\"headertitle\">\n<div class=\"title\">ndcctools.taskvine.task.Task Class Reference</div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n<div class=\"dynheader\">\nInheritance diagram for ndcctools.taskvine.task.Task:</div>\n<div class=\"dyncontent\">\n <div class=\"center\">\n  <img src=\"classndcctools_1_1taskvine_1_1task_1_1Task.png\" usemap=\"#ndcctools.taskvine.task.Task_map\" alt=\"\"/>\n  <map id=\"ndcctools.taskvine.task.Task_map\" name=\"ndcctools.taskvine.task.Task_map\">\n<area href=\"classndcctools_1_1taskvine_1_1task_1_1LibraryTask.html\" alt=\"ndcctools.taskvine.task.LibraryTask\" shape=\"rect\" coords=\"0,112,305,136\"/>\n<area href=\"classndcctools_1_1taskvine_1_1task_1_1PythonTask.html\" alt=\"ndcctools.taskvine.task.PythonTask\" shape=\"rect\" coords=\"315,112,620,136\"/>\n<area href=\"classndcctools_1_1taskvine_1_1dask__executor_1_1PythonTaskDask.html\" alt=\"ndcctools.taskvine.dask_executor.PythonTaskDask\" shape=\"rect\" coords=\"0,168,305,192\"/>\n<area href=\"classndcctools_1_1taskvine_1_1futures_1_1FuturePythonTask.html\" alt=\"ndcctools.taskvine.futures.FuturePythonTask\" shape=\"rect\" coords=\"315,168,620,192\"/>\n<area href=\"classndcctools_1_1taskvine_1_1task_1_1FunctionCall.html\" alt=\"ndcctools.taskvine.task.FunctionCall\" shape=\"rect\" coords=\"630,168,935,192\"/>\n<area href=\"classndcctools_1_1taskvine_1_1dask__executor_1_1FunctionCallDask.html\" alt=\"ndcctools.taskvine.dask_executor.FunctionCallDask\" shape=\"rect\" coords=\"472,224,777,248\"/>\n<area href=\"classndcctools_1_1taskvine_1_1futures_1_1FutureFunctionCall.html\" alt=\"ndcctools.taskvine.futures.FutureFunctionCall\" shape=\"rect\" coords=\"787,224,1092,248\"/>\n  </map>\n</div></div>\n<table class=\"memberdecls\">\n<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\nPublic Member Functions</h2></td></tr>\n<tr class=\"memitem:af501ee35feebf34c4e4f8e9929092868\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#af501ee35feebf34c4e4f8e9929092868\">__init__</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aa8529d5fe00d6cc9379e8909eae36d8f\">command</a>, **task_info)</td></tr>\n<tr class=\"memdesc:af501ee35feebf34c4e4f8e9929092868\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Create a new task specification.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#af501ee35feebf34c4e4f8e9929092868\">More...</a><br /></td></tr>\n<tr class=\"separator:af501ee35feebf34c4e4f8e9929092868\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a4b56858a9dea0749f8c94f688eeb24d3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a4b56858a9dea0749f8c94f688eeb24d3\">submit_finalize</a> (self)</td></tr>\n<tr class=\"memdesc:a4b56858a9dea0749f8c94f688eeb24d3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Finalizes the task definition once the manager that will execute is run.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a4b56858a9dea0749f8c94f688eeb24d3\">More...</a><br /></td></tr>\n<tr class=\"separator:a4b56858a9dea0749f8c94f688eeb24d3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a54400f1805836a33921002cb3488994b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a54400f1805836a33921002cb3488994b\">clone</a> (self)</td></tr>\n<tr class=\"memdesc:a54400f1805836a33921002cb3488994b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return a copy of this task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a54400f1805836a33921002cb3488994b\">More...</a><br /></td></tr>\n<tr class=\"separator:a54400f1805836a33921002cb3488994b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a9469cbf1a700dfd93a9e98a021637f75\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a9469cbf1a700dfd93a9e98a021637f75\">set_command</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aa8529d5fe00d6cc9379e8909eae36d8f\">command</a>)</td></tr>\n<tr class=\"memdesc:a9469cbf1a700dfd93a9e98a021637f75\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the command to be executed by the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a9469cbf1a700dfd93a9e98a021637f75\">More...</a><br /></td></tr>\n<tr class=\"separator:a9469cbf1a700dfd93a9e98a021637f75\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:af27acc3f59cbbd2cc09db821c7a5db5d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#af27acc3f59cbbd2cc09db821c7a5db5d\">set_library_required</a> (self, library)</td></tr>\n<tr class=\"memdesc:af27acc3f59cbbd2cc09db821c7a5db5d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the name of the library at the worker that should execute the task's command.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#af27acc3f59cbbd2cc09db821c7a5db5d\">More...</a><br /></td></tr>\n<tr class=\"separator:af27acc3f59cbbd2cc09db821c7a5db5d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:adb7ddc4059cd09f9321526fe10341c6c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#adb7ddc4059cd09f9321526fe10341c6c\">get_library_required</a> (self)</td></tr>\n<tr class=\"memdesc:adb7ddc4059cd09f9321526fe10341c6c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the name of the library at the worker that should execute the task's command.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#adb7ddc4059cd09f9321526fe10341c6c\">More...</a><br /></td></tr>\n<tr class=\"separator:adb7ddc4059cd09f9321526fe10341c6c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ab59b1de3b1ee5ef6c36824b434ce4a85\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab59b1de3b1ee5ef6c36824b434ce4a85\">needs_library</a> (self, library)</td></tr>\n<tr class=\"memdesc:ab59b1de3b1ee5ef6c36824b434ce4a85\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Deprecated, see set_library_required.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab59b1de3b1ee5ef6c36824b434ce4a85\">More...</a><br /></td></tr>\n<tr class=\"separator:ab59b1de3b1ee5ef6c36824b434ce4a85\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a80363e3fe15ed6a0e5e432ab6bd2dfb2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a80363e3fe15ed6a0e5e432ab6bd2dfb2\">set_library_provided</a> (self, library_name)</td></tr>\n<tr class=\"memdesc:a80363e3fe15ed6a0e5e432ab6bd2dfb2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the library name provided by this task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a80363e3fe15ed6a0e5e432ab6bd2dfb2\">More...</a><br /></td></tr>\n<tr class=\"separator:a80363e3fe15ed6a0e5e432ab6bd2dfb2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a17c52cdaddceb81124175d976ecf7f9c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a17c52cdaddceb81124175d976ecf7f9c\">get_libray_provided</a> (self)</td></tr>\n<tr class=\"memdesc:a17c52cdaddceb81124175d976ecf7f9c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the name of the library at the worker that should execute the task's command.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a17c52cdaddceb81124175d976ecf7f9c\">More...</a><br /></td></tr>\n<tr class=\"separator:a17c52cdaddceb81124175d976ecf7f9c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ad88ef8b3888e4a55fba1ab5b9ae91c95\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ad88ef8b3888e4a55fba1ab5b9ae91c95\">provides_library</a> (self, library)</td></tr>\n<tr class=\"memdesc:ad88ef8b3888e4a55fba1ab5b9ae91c95\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Deprecated, see set_library_provided.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ad88ef8b3888e4a55fba1ab5b9ae91c95\">More...</a><br /></td></tr>\n<tr class=\"separator:ad88ef8b3888e4a55fba1ab5b9ae91c95\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ad24ccab31b50725727cea14f911558f6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ad24ccab31b50725727cea14f911558f6\">set_function_slots</a> (self, nslots)</td></tr>\n<tr class=\"memdesc:ad24ccab31b50725727cea14f911558f6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the number of concurrent functions a library can run.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ad24ccab31b50725727cea14f911558f6\">More...</a><br /></td></tr>\n<tr class=\"separator:ad24ccab31b50725727cea14f911558f6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a6b0fcfffd5d4dff755c7a99eb619595a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6b0fcfffd5d4dff755c7a99eb619595a\">set_function_exec_mode_from_string</a> (self, exec_mode)</td></tr>\n<tr class=\"memdesc:a6b0fcfffd5d4dff755c7a99eb619595a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the execution mode of functions in a library.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6b0fcfffd5d4dff755c7a99eb619595a\">More...</a><br /></td></tr>\n<tr class=\"separator:a6b0fcfffd5d4dff755c7a99eb619595a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a24944e81db8612b12d830c4368ffeeca\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a24944e81db8612b12d830c4368ffeeca\">set_scheduler</a> (self, scheduler)</td></tr>\n<tr class=\"memdesc:a24944e81db8612b12d830c4368ffeeca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the worker selection scheduler for task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a24944e81db8612b12d830c4368ffeeca\">More...</a><br /></td></tr>\n<tr class=\"separator:a24944e81db8612b12d830c4368ffeeca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a81291c32ed6e6de44db06728f2442330\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a81291c32ed6e6de44db06728f2442330\">set_tag</a> (self, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a528055956b577d019231c7758c525ae6\">tag</a>)</td></tr>\n<tr class=\"memdesc:a81291c32ed6e6de44db06728f2442330\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Attach a user defined logical name to the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a81291c32ed6e6de44db06728f2442330\">More...</a><br /></td></tr>\n<tr class=\"separator:a81291c32ed6e6de44db06728f2442330\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a21dff3fd2b4645e4932f23c6fc65acf1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a21dff3fd2b4645e4932f23c6fc65acf1\">set_category</a> (self, name)</td></tr>\n<tr class=\"memdesc:a21dff3fd2b4645e4932f23c6fc65acf1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Label the task with the given category.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a21dff3fd2b4645e4932f23c6fc65acf1\">More...</a><br /></td></tr>\n<tr class=\"separator:a21dff3fd2b4645e4932f23c6fc65acf1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:accbff76f7da4bd6a76ab4eea6b9636ca\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#accbff76f7da4bd6a76ab4eea6b9636ca\">add_feature</a> (self, name)</td></tr>\n<tr class=\"memdesc:accbff76f7da4bd6a76ab4eea6b9636ca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Label the task with the given user-defined feature.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#accbff76f7da4bd6a76ab4eea6b9636ca\">More...</a><br /></td></tr>\n<tr class=\"separator:accbff76f7da4bd6a76ab4eea6b9636ca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a5bfeac9391f07a1dbae0f92b14b221a1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">add_input</a> (self, file, remote_name, strict_input=False, mount_symlink=False)</td></tr>\n<tr class=\"memdesc:a5bfeac9391f07a1dbae0f92b14b221a1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add any input object to a task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">More...</a><br /></td></tr>\n<tr class=\"separator:a5bfeac9391f07a1dbae0f92b14b221a1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ae6c51fe9286081d53c28d2e767b0a26c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ae6c51fe9286081d53c28d2e767b0a26c\">add_output</a> (self, file, remote_name, watch=False, failure_only=None, success_only=None)</td></tr>\n<tr class=\"memdesc:ae6c51fe9286081d53c28d2e767b0a26c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add any output object to a task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ae6c51fe9286081d53c28d2e767b0a26c\">More...</a><br /></td></tr>\n<tr class=\"separator:ae6c51fe9286081d53c28d2e767b0a26c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aa175618124282f7272d6205322fc3078\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aa175618124282f7272d6205322fc3078\">set_snapshot_file</a> (self, filename)</td></tr>\n<tr class=\"memdesc:aa175618124282f7272d6205322fc3078\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">When monitoring, indicates a json-encoded file that instructs the monitor to take a snapshot of the task resources.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aa175618124282f7272d6205322fc3078\">More...</a><br /></td></tr>\n<tr class=\"separator:aa175618124282f7272d6205322fc3078\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a67f495d5b7b3a739023cc3c796eb7c5f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a67f495d5b7b3a739023cc3c796eb7c5f\">add_starch_package</a> (self, file)</td></tr>\n<tr class=\"memdesc:a67f495d5b7b3a739023cc3c796eb7c5f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a Starch package as an execution context.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a67f495d5b7b3a739023cc3c796eb7c5f\">More...</a><br /></td></tr>\n<tr class=\"separator:a67f495d5b7b3a739023cc3c796eb7c5f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a23df4f683398c38fb0adc8d4212112c7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a23df4f683398c38fb0adc8d4212112c7\">add_poncho_package</a> (self, file)</td></tr>\n<tr class=\"memdesc:a23df4f683398c38fb0adc8d4212112c7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a Poncho package as an execution context.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a23df4f683398c38fb0adc8d4212112c7\">More...</a><br /></td></tr>\n<tr class=\"separator:a23df4f683398c38fb0adc8d4212112c7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a84c4c9cb50554119ebcfc053d56d7dfc\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a84c4c9cb50554119ebcfc053d56d7dfc\">add_execution_context</a> (self, f)</td></tr>\n<tr class=\"memdesc:a84c4c9cb50554119ebcfc053d56d7dfc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds an execution context to the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a84c4c9cb50554119ebcfc053d56d7dfc\">More...</a><br /></td></tr>\n<tr class=\"separator:a84c4c9cb50554119ebcfc053d56d7dfc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aeb566587b3e4827c69b6022667246e36\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aeb566587b3e4827c69b6022667246e36\">set_retries</a> (self, max_retries)</td></tr>\n<tr class=\"memdesc:aeb566587b3e4827c69b6022667246e36\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Indicate the number of times the task should be retried.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aeb566587b3e4827c69b6022667246e36\">More...</a><br /></td></tr>\n<tr class=\"separator:aeb566587b3e4827c69b6022667246e36\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a298d4fd39ceba9bbcb77de1739b642c2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a298d4fd39ceba9bbcb77de1739b642c2\">set_max_forsaken</a> (self, max_forsaken)</td></tr>\n<tr class=\"memdesc:a298d4fd39ceba9bbcb77de1739b642c2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Indicate the number of times the task can be returned to the manager without being executed.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a298d4fd39ceba9bbcb77de1739b642c2\">More...</a><br /></td></tr>\n<tr class=\"separator:a298d4fd39ceba9bbcb77de1739b642c2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ae093b097c8476e37081bae54c8790b6e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ae093b097c8476e37081bae54c8790b6e\">set_cores</a> (self, cores)</td></tr>\n<tr class=\"memdesc:ae093b097c8476e37081bae54c8790b6e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Indicate the number of cores required by this task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ae093b097c8476e37081bae54c8790b6e\">More...</a><br /></td></tr>\n<tr class=\"separator:ae093b097c8476e37081bae54c8790b6e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a7c1f594d80915948c60541b2a93d72c6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a7c1f594d80915948c60541b2a93d72c6\">set_memory</a> (self, memory)</td></tr>\n<tr class=\"memdesc:a7c1f594d80915948c60541b2a93d72c6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Indicate the memory (in MB) required by this task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a7c1f594d80915948c60541b2a93d72c6\">More...</a><br /></td></tr>\n<tr class=\"separator:a7c1f594d80915948c60541b2a93d72c6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a6798f1a84ba6fcd173496ce03f38244b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6798f1a84ba6fcd173496ce03f38244b\">set_disk</a> (self, disk)</td></tr>\n<tr class=\"memdesc:a6798f1a84ba6fcd173496ce03f38244b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Indicate the disk space (in MB) required by this task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6798f1a84ba6fcd173496ce03f38244b\">More...</a><br /></td></tr>\n<tr class=\"separator:a6798f1a84ba6fcd173496ce03f38244b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a9c0f6d297dd8334350e795359b0fa693\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a9c0f6d297dd8334350e795359b0fa693\">set_gpus</a> (self, gpus)</td></tr>\n<tr class=\"memdesc:a9c0f6d297dd8334350e795359b0fa693\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Indicate the number of GPUs required by this task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a9c0f6d297dd8334350e795359b0fa693\">More...</a><br /></td></tr>\n<tr class=\"separator:a9c0f6d297dd8334350e795359b0fa693\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a118aea9a856cd1e2bcb03be66c666d9f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a118aea9a856cd1e2bcb03be66c666d9f\">set_priority</a> (self, priority)</td></tr>\n<tr class=\"memdesc:a118aea9a856cd1e2bcb03be66c666d9f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Indicate the the priority of this task (larger means better priority, default is 0).  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a118aea9a856cd1e2bcb03be66c666d9f\">More...</a><br /></td></tr>\n<tr class=\"separator:a118aea9a856cd1e2bcb03be66c666d9f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aecc2d7b12dbdc387a5aca14cbd24f5e1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aecc2d7b12dbdc387a5aca14cbd24f5e1\">set_env_var</a> (self, name, value=None)</td></tr>\n<tr class=\"memdesc:aecc2d7b12dbdc387a5aca14cbd24f5e1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set this environment variable before running the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aecc2d7b12dbdc387a5aca14cbd24f5e1\">More...</a><br /></td></tr>\n<tr class=\"separator:aecc2d7b12dbdc387a5aca14cbd24f5e1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a4b605562c4905ec9c5d318de9cf5eb06\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a4b605562c4905ec9c5d318de9cf5eb06\">set_monitor_output</a> (self, directory)</td></tr>\n<tr class=\"memdesc:a4b605562c4905ec9c5d318de9cf5eb06\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set a name for the resource summary output directory from the monitor.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a4b605562c4905ec9c5d318de9cf5eb06\">More...</a><br /></td></tr>\n<tr class=\"separator:a4b605562c4905ec9c5d318de9cf5eb06\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a528055956b577d019231c7758c525ae6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a528055956b577d019231c7758c525ae6\">tag</a> (self)</td></tr>\n<tr class=\"memdesc:a528055956b577d019231c7758c525ae6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the user-defined logical name for the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a528055956b577d019231c7758c525ae6\">More...</a><br /></td></tr>\n<tr class=\"separator:a528055956b577d019231c7758c525ae6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a698db7f9ae66b99484a6ccc1ee6c3a1b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a698db7f9ae66b99484a6ccc1ee6c3a1b\">category</a> (self)</td></tr>\n<tr class=\"memdesc:a698db7f9ae66b99484a6ccc1ee6c3a1b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the category name for the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a698db7f9ae66b99484a6ccc1ee6c3a1b\">More...</a><br /></td></tr>\n<tr class=\"separator:a698db7f9ae66b99484a6ccc1ee6c3a1b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aa8529d5fe00d6cc9379e8909eae36d8f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aa8529d5fe00d6cc9379e8909eae36d8f\">command</a> (self)</td></tr>\n<tr class=\"memdesc:aa8529d5fe00d6cc9379e8909eae36d8f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the shell command executed by the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#aa8529d5fe00d6cc9379e8909eae36d8f\">More...</a><br /></td></tr>\n<tr class=\"separator:aa8529d5fe00d6cc9379e8909eae36d8f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a6bd789575d244bda90894fbf87420277\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6bd789575d244bda90894fbf87420277\">state</a> (self)</td></tr>\n<tr class=\"memdesc:a6bd789575d244bda90894fbf87420277\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the state of the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6bd789575d244bda90894fbf87420277\">More...</a><br /></td></tr>\n<tr class=\"separator:a6bd789575d244bda90894fbf87420277\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a57712481148768b233817fecd02d5d7c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a57712481148768b233817fecd02d5d7c\">std_output</a> (self)</td></tr>\n<tr class=\"memdesc:a57712481148768b233817fecd02d5d7c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the standard output of the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a57712481148768b233817fecd02d5d7c\">More...</a><br /></td></tr>\n<tr class=\"separator:a57712481148768b233817fecd02d5d7c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ab721dbafb0f032792a4170a187c95496\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab721dbafb0f032792a4170a187c95496\">output</a> (self)</td></tr>\n<tr class=\"memdesc:ab721dbafb0f032792a4170a187c95496\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the standard output of the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab721dbafb0f032792a4170a187c95496\">More...</a><br /></td></tr>\n<tr class=\"separator:ab721dbafb0f032792a4170a187c95496\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a77b9428ff55aa205fbf771ae677aa721\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a77b9428ff55aa205fbf771ae677aa721\">id</a> (self)</td></tr>\n<tr class=\"memdesc:a77b9428ff55aa205fbf771ae677aa721\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the task id number.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a77b9428ff55aa205fbf771ae677aa721\">More...</a><br /></td></tr>\n<tr class=\"separator:a77b9428ff55aa205fbf771ae677aa721\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a503650a81329b19c7000d545a09d749e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a503650a81329b19c7000d545a09d749e\">exit_code</a> (self)</td></tr>\n<tr class=\"memdesc:a503650a81329b19c7000d545a09d749e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the exit code of the command executed by the task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a503650a81329b19c7000d545a09d749e\">More...</a><br /></td></tr>\n<tr class=\"separator:a503650a81329b19c7000d545a09d749e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a0c0b69970cebbcd4f37f1434f66680f6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a0c0b69970cebbcd4f37f1434f66680f6\">result</a> (self)</td></tr>\n<tr class=\"memdesc:a0c0b69970cebbcd4f37f1434f66680f6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return a string that explains the result of a task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a0c0b69970cebbcd4f37f1434f66680f6\">More...</a><br /></td></tr>\n<tr class=\"separator:a0c0b69970cebbcd4f37f1434f66680f6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a175caa08bc88deafc95796efb66b3fe5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a175caa08bc88deafc95796efb66b3fe5\">completed</a> (self)</td></tr>\n<tr class=\"memdesc:a175caa08bc88deafc95796efb66b3fe5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return True if task executed and its command terminated normally.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a175caa08bc88deafc95796efb66b3fe5\">More...</a><br /></td></tr>\n<tr class=\"separator:a175caa08bc88deafc95796efb66b3fe5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a3ba447d023b4da6a75a5cf78a7e5b23f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a3ba447d023b4da6a75a5cf78a7e5b23f\">successful</a> (self)</td></tr>\n<tr class=\"memdesc:a3ba447d023b4da6a75a5cf78a7e5b23f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return True if task executed successfully, (i.e.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a3ba447d023b4da6a75a5cf78a7e5b23f\">More...</a><br /></td></tr>\n<tr class=\"separator:a3ba447d023b4da6a75a5cf78a7e5b23f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a6c02076702b58d7abfa6e17c31a2be7a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6c02076702b58d7abfa6e17c31a2be7a\">get_metric</a> (self, name)</td></tr>\n<tr class=\"memdesc:a6c02076702b58d7abfa6e17c31a2be7a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return various integer performance metrics about a completed task.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a6c02076702b58d7abfa6e17c31a2be7a\">More...</a><br /></td></tr>\n<tr class=\"separator:a6c02076702b58d7abfa6e17c31a2be7a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a48e43c5a554f4611feaf3e5555f058a1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a48e43c5a554f4611feaf3e5555f058a1\">addrport</a> (self)</td></tr>\n<tr class=\"memdesc:a48e43c5a554f4611feaf3e5555f058a1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the address and port of the host on which the task ran.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a48e43c5a554f4611feaf3e5555f058a1\">More...</a><br /></td></tr>\n<tr class=\"separator:a48e43c5a554f4611feaf3e5555f058a1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:abdb774d52d3d60bc2c3cca2d975c1e08\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#abdb774d52d3d60bc2c3cca2d975c1e08\">hostname</a> (self)</td></tr>\n<tr class=\"memdesc:abdb774d52d3d60bc2c3cca2d975c1e08\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the address and port of the host on which the task ran.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#abdb774d52d3d60bc2c3cca2d975c1e08\">More...</a><br /></td></tr>\n<tr class=\"separator:abdb774d52d3d60bc2c3cca2d975c1e08\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ab2bb494b7eacf612aa9752c06bb2a763\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">resources_measured</a> (self)</td></tr>\n<tr class=\"memdesc:ab2bb494b7eacf612aa9752c06bb2a763\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the resources measured for the task execution if resource monitoring is enabled.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">More...</a><br /></td></tr>\n<tr class=\"separator:ab2bb494b7eacf612aa9752c06bb2a763\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1511c867b3bf46e15ff4b67a6a83ef3a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a1511c867b3bf46e15ff4b67a6a83ef3a\">limits_exceeded</a> (self)</td></tr>\n<tr class=\"memdesc:a1511c867b3bf46e15ff4b67a6a83ef3a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the resources the task exceeded.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a1511c867b3bf46e15ff4b67a6a83ef3a\">More...</a><br /></td></tr>\n<tr class=\"separator:a1511c867b3bf46e15ff4b67a6a83ef3a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a1b4523512094f59883f734f7f287c401\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a1b4523512094f59883f734f7f287c401\">resources_requested</a> (self)</td></tr>\n<tr class=\"memdesc:a1b4523512094f59883f734f7f287c401\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the resources the task requested to run.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a1b4523512094f59883f734f7f287c401\">More...</a><br /></td></tr>\n<tr class=\"separator:a1b4523512094f59883f734f7f287c401\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:acf60223fbeac4d17e8fb6f69eb1d6422\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#acf60223fbeac4d17e8fb6f69eb1d6422\">resources_allocated</a> (self)</td></tr>\n<tr class=\"memdesc:acf60223fbeac4d17e8fb6f69eb1d6422\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the resources allocated to the task in its latest attempt.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#acf60223fbeac4d17e8fb6f69eb1d6422\">More...</a><br /></td></tr>\n<tr class=\"separator:acf60223fbeac4d17e8fb6f69eb1d6422\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac568ee89350dede20643ca88578517b1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">def&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ac568ee89350dede20643ca88578517b1\">add_nopen</a> (self, manager)</td></tr>\n<tr class=\"memdesc:ac568ee89350dede20643ca88578517b1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds inputs for nopen library and rules file and sets LD_PRELOAD.  <a href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ac568ee89350dede20643ca88578517b1\">More...</a><br /></td></tr>\n<tr class=\"separator:ac568ee89350dede20643ca88578517b1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table>\n<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n<div class=\"textblock\"><p>TaskVine <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html\">Task</a> object</p>\n<p>This class is used to create a task specification to be submitted to a <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html\">ndcctools.taskvine.manager.Manager</a>. </p>\n</div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n<a id=\"af501ee35feebf34c4e4f8e9929092868\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#af501ee35feebf34c4e4f8e9929092868\">&#9670;&nbsp;</a></span>__init__()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.__init__ </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>command</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">**&#160;</td>\n          <td class=\"paramname\"><em>task_info</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Create a new task specification. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">command</td><td>The shell command line to be exected by the task. </td></tr>\n    <tr><td class=\"paramname\">task_info</td><td>Optional dictionary containing specified task parameters. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<h2 class=\"groupheader\">Member Function Documentation</h2>\n<a id=\"a4b56858a9dea0749f8c94f688eeb24d3\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a4b56858a9dea0749f8c94f688eeb24d3\">&#9670;&nbsp;</a></span>submit_finalize()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.submit_finalize </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Finalizes the task definition once the manager that will execute is run. </p>\n<p>This function is run by the manager before registering the task for execution.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current python task object </td></tr>\n  </table>\n  </dd>\n</dl>\n\n<p>Reimplemented in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1FunctionCall.html#a878bfecf8904a5e888b532b45b7f23de\">ndcctools.taskvine.task.FunctionCall</a>, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1PythonTask.html#adb77150a69875cc0b6bcee7f07e40452\">ndcctools.taskvine.task.PythonTask</a>, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1futures_1_1FuturePythonTask.html#aeae43fe85684fea29862fdd41732c096\">ndcctools.taskvine.futures.FuturePythonTask</a>, and <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1futures_1_1FutureFunctionCall.html#a472d6740568123197351674501cd891b\">ndcctools.taskvine.futures.FutureFunctionCall</a>.</p>\n\n</div>\n</div>\n<a id=\"a54400f1805836a33921002cb3488994b\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a54400f1805836a33921002cb3488994b\">&#9670;&nbsp;</a></span>clone()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.clone </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Return a copy of this task. </p>\n<pre class=\"fragment\">Return a (deep)copy this task that can also be submitted to the ndcctools.taskvine.</pre> \n</div>\n</div>\n<a id=\"a9469cbf1a700dfd93a9e98a021637f75\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a9469cbf1a700dfd93a9e98a021637f75\">&#9670;&nbsp;</a></span>set_command()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_command </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>command</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the command to be executed by the task. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">command</td><td>The command to be executed. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"af27acc3f59cbbd2cc09db821c7a5db5d\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#af27acc3f59cbbd2cc09db821c7a5db5d\">&#9670;&nbsp;</a></span>set_library_required()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_library_required </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the name of the library at the worker that should execute the task's command. </p>\n<p>This is not needed for regular tasks.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">library</td><td>The library or the name of the library </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"adb7ddc4059cd09f9321526fe10341c6c\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#adb7ddc4059cd09f9321526fe10341c6c\">&#9670;&nbsp;</a></span>get_library_required()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.get_library_required </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the name of the library at the worker that should execute the task's command. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ab59b1de3b1ee5ef6c36824b434ce4a85\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ab59b1de3b1ee5ef6c36824b434ce4a85\">&#9670;&nbsp;</a></span>needs_library()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.needs_library </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Deprecated, see set_library_required. </p>\n\n</div>\n</div>\n<a id=\"a80363e3fe15ed6a0e5e432ab6bd2dfb2\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a80363e3fe15ed6a0e5e432ab6bd2dfb2\">&#9670;&nbsp;</a></span>set_library_provided()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_library_provided </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library_name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the library name provided by this task. </p>\n<p>This is not needed for regular tasks.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">library_name</td><td>The name of the library. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a17c52cdaddceb81124175d976ecf7f9c\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a17c52cdaddceb81124175d976ecf7f9c\">&#9670;&nbsp;</a></span>get_libray_provided()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.get_libray_provided </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the name of the library at the worker that should execute the task's command. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"ad88ef8b3888e4a55fba1ab5b9ae91c95\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ad88ef8b3888e4a55fba1ab5b9ae91c95\">&#9670;&nbsp;</a></span>provides_library()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.provides_library </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>library</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Deprecated, see set_library_provided. </p>\n\n</div>\n</div>\n<a id=\"ad24ccab31b50725727cea14f911558f6\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ad24ccab31b50725727cea14f911558f6\">&#9670;&nbsp;</a></span>set_function_slots()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_function_slots </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>nslots</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the number of concurrent functions a library can run. </p>\n<p>This is not needed for regular tasks.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">nslots</td><td>The maximum number of concurrent functions this library can run. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a6b0fcfffd5d4dff755c7a99eb619595a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a6b0fcfffd5d4dff755c7a99eb619595a\">&#9670;&nbsp;</a></span>set_function_exec_mode_from_string()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_function_exec_mode_from_string </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>exec_mode</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the execution mode of functions in a library. </p>\n<p>This is not needed for regular tasks.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">exec_mode</td><td>The execution mode of functions in a library. Either 'fork' or 'direct'. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a24944e81db8612b12d830c4368ffeeca\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a24944e81db8612b12d830c4368ffeeca\">&#9670;&nbsp;</a></span>set_scheduler()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_scheduler </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>scheduler</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set the worker selection scheduler for task. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">scheduler</td><td>One of the following schedulers to use in assigning a task to a worker. See <a class=\"el\" href=\"taskvine_8h.html#a3f4aeba658e9800a612580a4aba01c11\">vine_schedule_t</a> for possible values. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a81291c32ed6e6de44db06728f2442330\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a81291c32ed6e6de44db06728f2442330\">&#9670;&nbsp;</a></span>set_tag()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_tag </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>tag</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Attach a user defined logical name to the task. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">tag</td><td>The tag to attach to task. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a21dff3fd2b4645e4932f23c6fc65acf1\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a21dff3fd2b4645e4932f23c6fc65acf1\">&#9670;&nbsp;</a></span>set_category()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_category </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Label the task with the given category. </p>\n<p>It is expected that tasks with the same category have similar resources requirements (e.g. to disconnect slow workers).</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>The name of the category </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"accbff76f7da4bd6a76ab4eea6b9636ca\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#accbff76f7da4bd6a76ab4eea6b9636ca\">&#9670;&nbsp;</a></span>add_feature()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.add_feature </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Label the task with the given user-defined feature. </p>\n<p>Tasks with the feature will only run on workers that provide it (see worker's &ndash;feature option).</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>The name of the feature. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a5bfeac9391f07a1dbae0f92b14b221a1\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a5bfeac9391f07a1dbae0f92b14b221a1\">&#9670;&nbsp;</a></span>add_input()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.add_input </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>file</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>remote_name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>strict_input</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>mount_symlink</em> = <code>False</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Add any input object to a task. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">file</td><td>A file object of class <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1file_1_1File.html\">ndcctools.taskvine.file.File</a>, such as from <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a82482de2472f559d17d47482a64fafa9\">ndcctools.taskvine.manager.Manager.declare_file</a>, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a14ec5064e4807adf25c2e1882dab4eea\">ndcctools.taskvine.manager.Manager.declare_buffer</a>, <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a1af2c1723986029982290a261a183c1a\">ndcctools.taskvine.manager.Manager.declare_url</a>, etc. </td></tr>\n    <tr><td class=\"paramname\">remote_name</td><td>The name of the file at the execution site. </td></tr>\n    <tr><td class=\"paramname\">strict_input</td><td>Whether the file should be transfered to the worker for execution. If no worker has all the input files already cached marked as strict inputs for the task, the task fails.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>For example: </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; url = m.declare_url(http://somewhere.edu/data.tgz)</div>\n<div class=\"line\">&gt;&gt;&gt; f = m.declare_untar(url)</div>\n<div class=\"line\">&gt;&gt;&gt; task.add_input(f,<span class=\"stringliteral\">&quot;data&quot;</span>)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"ae6c51fe9286081d53c28d2e767b0a26c\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ae6c51fe9286081d53c28d2e767b0a26c\">&#9670;&nbsp;</a></span>add_output()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.add_output </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>file</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>remote_name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>watch</em> = <code>False</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>failure_only</em> = <code>None</code>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>success_only</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Add any output object to a task. </p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">file</td><td>A file object of class <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1file_1_1File.html\">ndcctools.taskvine.file.File</a>, such as from <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a82482de2472f559d17d47482a64fafa9\">ndcctools.taskvine.manager.Manager.declare_file</a>, or <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1manager_1_1Manager.html#a14ec5064e4807adf25c2e1882dab4eea\">ndcctools.taskvine.manager.Manager.declare_buffer</a> <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a5bfeac9391f07a1dbae0f92b14b221a1\">ndcctools.taskvine.task.Task.add_input</a> </td></tr>\n    <tr><td class=\"paramname\">remote_name</td><td>The name of the file at the execution site. </td></tr>\n    <tr><td class=\"paramname\">watch</td><td>Watch the output file and send back changes as the task runs. </td></tr>\n    <tr><td class=\"paramname\">success_only</td><td>Whether the file should be retrieved only when the task succeeds. Default is False. </td></tr>\n    <tr><td class=\"paramname\">failure_only</td><td>Whether the file should be retrieved only when the task fails (e.g., debug logs). Default is False.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>For example: </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; file = m.declare_file(<span class=\"stringliteral\">&quot;output.txt&quot;</span>)</div>\n<div class=\"line\">&gt;&gt;&gt; task.add_output(file,<span class=\"stringliteral\">&quot;out&quot;</span>)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"aa175618124282f7272d6205322fc3078\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aa175618124282f7272d6205322fc3078\">&#9670;&nbsp;</a></span>set_snapshot_file()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_snapshot_file </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>filename</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>When monitoring, indicates a json-encoded file that instructs the monitor to take a snapshot of the task resources. </p>\n<p>Snapshots appear in the JSON summary file of the task, under the key \"snapshots\". Snapshots are taken on events on files described in the monitor_snapshot_file. The monitor_snapshot_file is a json encoded file with the following format:</p>\n<div class=\"fragment\"><div class=\"line\">{</div>\n<div class=\"line\">    <span class=\"stringliteral\">&quot;FILENAME&quot;</span>: {</div>\n<div class=\"line\">        <span class=\"stringliteral\">&quot;from-start&quot;</span>:boolean,</div>\n<div class=\"line\">        <span class=\"stringliteral\">&quot;from-start-if-truncated&quot;</span>:boolean,</div>\n<div class=\"line\">        <span class=\"stringliteral\">&quot;delete-if-found&quot;</span>:boolean,</div>\n<div class=\"line\">        <span class=\"stringliteral\">&quot;events&quot;</span>: [</div>\n<div class=\"line\">            {</div>\n<div class=\"line\">                <span class=\"stringliteral\">&quot;label&quot;</span>:<span class=\"stringliteral\">&quot;EVENT_NAME&quot;</span>,</div>\n<div class=\"line\">                <span class=\"stringliteral\">&quot;on-create&quot;</span>:boolean,</div>\n<div class=\"line\">                <span class=\"stringliteral\">&quot;on-truncate&quot;</span>:boolean,</div>\n<div class=\"line\">                <span class=\"stringliteral\">&quot;pattern&quot;</span>:<span class=\"stringliteral\">&quot;REGEXP&quot;</span>,</div>\n<div class=\"line\">                <span class=\"stringliteral\">&quot;count&quot;</span>:integer</div>\n<div class=\"line\">            },</div>\n<div class=\"line\">            {</div>\n<div class=\"line\">                <span class=\"stringliteral\">&quot;label&quot;</span>:<span class=\"stringliteral\">&quot;EVENT_NAME&quot;</span>,</div>\n<div class=\"line\">                ...</div>\n<div class=\"line\">            }</div>\n<div class=\"line\">        ]</div>\n<div class=\"line\">    },</div>\n<div class=\"line\">    <span class=\"stringliteral\">&quot;FILENAME&quot;</span>: {</div>\n<div class=\"line\">        ...</div>\n<div class=\"line\">}</div>\n</div><!-- fragment --><p>All keys but \"label\" are optional:</p>\n<p>from-start:boolean If FILENAME exits when task starts running, process from line 1. Default: false, as the task may be appending to an already existing file. from-start-if-truncated If FILENAME is truncated, process from line 1. Default: true, to account for log rotations. delete-if-found Delete FILENAME when found. Default: false</p>\n<p>events: label Name that identifies the snapshot. Only alphanumeric, -, and _ characters are allowed. on-create Take a snapshot every time the file is created. Default: false on-truncate Take a snapshot when the file is truncated. Default: false on-pattern Take a snapshot when a line matches the regexp pattern. Default: none count Maximum number of snapshots for this label. Default: -1 (no limit)</p>\n<p>Exactly one of on-create, on-truncate, or on-pattern should be specified.</p>\n<p>Once a task has finished, the snapshots are available as:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"keywordflow\">for</span> s <span class=\"keywordflow\">in</span> t.resources_measured.snapshots:</div>\n<div class=\"line\">  print(s.memory)</div>\n</div><!-- fragment --><p>For more information, consult the manual of the <a class=\"el\" href=\"namespacendcctools_1_1resource__monitor.html\">resource_monitor</a>.</p>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">self</td><td>Reference to the current task object. </td></tr>\n    <tr><td class=\"paramname\">filename</td><td>The name of the snapshot events specification </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a67f495d5b7b3a739023cc3c796eb7c5f\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a67f495d5b7b3a739023cc3c796eb7c5f\">&#9670;&nbsp;</a></span>add_starch_package()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.add_starch_package </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>file</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Add a Starch package as an execution context. </p>\n<p>The file given must refer to a (unpacked) package containing libraries captured by the <code>starch</code> command. The task will execute using this package as its environment. </p><dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">t</td><td>A task object. </td></tr>\n    <tr><td class=\"paramname\">f</td><td>A file containing an unpacked Starch package. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a23df4f683398c38fb0adc8d4212112c7\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a23df4f683398c38fb0adc8d4212112c7\">&#9670;&nbsp;</a></span>add_poncho_package()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.add_poncho_package </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>file</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Add a Poncho package as an execution context. </p>\n<p>The file given must refer to a (unpacked) PONCHO package, containing a set of Python modules needed by the task. The task will execute using this package as its Python environment. </p><dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">t</td><td>A task object. </td></tr>\n    <tr><td class=\"paramname\">f</td><td>A file containing an unpacked Poncho package. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"a84c4c9cb50554119ebcfc053d56d7dfc\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a84c4c9cb50554119ebcfc053d56d7dfc\">&#9670;&nbsp;</a></span>add_execution_context()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.add_execution_context </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>f</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Adds an execution context to the task. </p>\n<p>The context file given must expand to a directory containing (at a minimum) a file named bin/run_in_env that will perform any desired setup (e.g. setting PATH, LD_LIBRARY_PATH, PYTHONPATH), execute the given command, and then perform any desired cleanup. The context directory may also include any support files or libraries needed by the task. If specified multiple times, execution contexts are nested in the order given (i.e. first added is the first applied). </p><dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a23df4f683398c38fb0adc8d4212112c7\" title=\"Add a Poncho package as an execution context.\">add_poncho_package</a> </dd>\n<dd>\n<a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a67f495d5b7b3a739023cc3c796eb7c5f\" title=\"Add a Starch package as an execution context.\">add_starch_package</a> </dd></dl>\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">t</td><td>A task object. </td></tr>\n    <tr><td class=\"paramname\">f</td><td>The execution context file. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a id=\"aeb566587b3e4827c69b6022667246e36\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aeb566587b3e4827c69b6022667246e36\">&#9670;&nbsp;</a></span>set_retries()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_retries </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>max_retries</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Indicate the number of times the task should be retried. </p>\n<p>If less than 1 (the default), the task is tried indefinitely. A task that did not succeed after the given number of retries is returned with result \"max retries\". </p>\n\n</div>\n</div>\n<a id=\"a298d4fd39ceba9bbcb77de1739b642c2\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a298d4fd39ceba9bbcb77de1739b642c2\">&#9670;&nbsp;</a></span>set_max_forsaken()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_max_forsaken </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>max_forsaken</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Indicate the number of times the task can be returned to the manager without being executed. </p>\n<p>If less than 0 (the default), the task is tried indefinitely. A task that did not succeed after the given number of retries is returned with result \"forsaken\". </p>\n\n</div>\n</div>\n<a id=\"ae093b097c8476e37081bae54c8790b6e\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ae093b097c8476e37081bae54c8790b6e\">&#9670;&nbsp;</a></span>set_cores()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_cores </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>cores</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Indicate the number of cores required by this task. </p>\n\n</div>\n</div>\n<a id=\"a7c1f594d80915948c60541b2a93d72c6\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a7c1f594d80915948c60541b2a93d72c6\">&#9670;&nbsp;</a></span>set_memory()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_memory </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>memory</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Indicate the memory (in MB) required by this task. </p>\n\n</div>\n</div>\n<a id=\"a6798f1a84ba6fcd173496ce03f38244b\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a6798f1a84ba6fcd173496ce03f38244b\">&#9670;&nbsp;</a></span>set_disk()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_disk </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>disk</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Indicate the disk space (in MB) required by this task. </p>\n\n</div>\n</div>\n<a id=\"a9c0f6d297dd8334350e795359b0fa693\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a9c0f6d297dd8334350e795359b0fa693\">&#9670;&nbsp;</a></span>set_gpus()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_gpus </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>gpus</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Indicate the number of GPUs required by this task. </p>\n\n</div>\n</div>\n<a id=\"a118aea9a856cd1e2bcb03be66c666d9f\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a118aea9a856cd1e2bcb03be66c666d9f\">&#9670;&nbsp;</a></span>set_priority()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_priority </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>priority</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Indicate the the priority of this task (larger means better priority, default is 0). </p>\n\n</div>\n</div>\n<a id=\"aecc2d7b12dbdc387a5aca14cbd24f5e1\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aecc2d7b12dbdc387a5aca14cbd24f5e1\">&#9670;&nbsp;</a></span>set_env_var()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_env_var </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>value</em> = <code>None</code>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set this environment variable before running the task. </p>\n<p>If value is None, then variable is unset. </p>\n\n</div>\n</div>\n<a id=\"a4b605562c4905ec9c5d318de9cf5eb06\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a4b605562c4905ec9c5d318de9cf5eb06\">&#9670;&nbsp;</a></span>set_monitor_output()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.set_monitor_output </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>directory</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Set a name for the resource summary output directory from the monitor. </p>\n\n</div>\n</div>\n<a id=\"a528055956b577d019231c7758c525ae6\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a528055956b577d019231c7758c525ae6\">&#9670;&nbsp;</a></span>tag()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.tag </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the user-defined logical name for the task. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.tag)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a698db7f9ae66b99484a6ccc1ee6c3a1b\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a698db7f9ae66b99484a6ccc1ee6c3a1b\">&#9670;&nbsp;</a></span>category()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.category </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the category name for the task. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.category)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"aa8529d5fe00d6cc9379e8909eae36d8f\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#aa8529d5fe00d6cc9379e8909eae36d8f\">&#9670;&nbsp;</a></span>command()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.command </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the shell command executed by the task. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.command)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a6bd789575d244bda90894fbf87420277\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a6bd789575d244bda90894fbf87420277\">&#9670;&nbsp;</a></span>state()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.state </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the state of the task. </p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.command)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a57712481148768b233817fecd02d5d7c\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a57712481148768b233817fecd02d5d7c\">&#9670;&nbsp;</a></span>std_output()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.std_output </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the standard output of the task. </p>\n<p>Must be called only after the task completes execution. </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.std_output)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"ab721dbafb0f032792a4170a187c95496\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ab721dbafb0f032792a4170a187c95496\">&#9670;&nbsp;</a></span>output()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.output </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the standard output of the task. </p>\n<p>(Same as t.std_output for regular taskvine tasks) Must be called only after the task completes execution. If this task is a <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1FunctionCall.html\">FunctionCall</a> task then we apply some transformations as <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1FunctionCall.html\">FunctionCall</a> returns a specifically formatted result. </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.output)</div>\n</div><!-- fragment --> \n<p>Reimplemented in <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1FunctionCall.html#a268dbf24e5bd4ecfb78919c70a236595\">ndcctools.taskvine.task.FunctionCall</a>, and <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1PythonTask.html#ac061e3dd3d4f3ebd92b0062997a2ff5e\">ndcctools.taskvine.task.PythonTask</a>.</p>\n\n</div>\n</div>\n<a id=\"a77b9428ff55aa205fbf771ae677aa721\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a77b9428ff55aa205fbf771ae677aa721\">&#9670;&nbsp;</a></span>id()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.id </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the task id number. </p>\n<p>Must be called only after the task was submitted. </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.id)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a503650a81329b19c7000d545a09d749e\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a503650a81329b19c7000d545a09d749e\">&#9670;&nbsp;</a></span>exit_code()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.exit_code </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the exit code of the command executed by the task. </p>\n<p>Must be called only after the task completes execution. </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.exit_code)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a0c0b69970cebbcd4f37f1434f66680f6\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a0c0b69970cebbcd4f37f1434f66680f6\">&#9670;&nbsp;</a></span>result()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.result </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Return a string that explains the result of a task. </p>\n<p>Must be called only after the task completes execution.</p>\n<p>Possible results are: \"success\" \"input missing\" \"output missing\" \"stdout missing\" \"signal\" \"resource exhaustion\" \"max end time\" \"unknown\" \"forsaken\" \"max retries\" \"max wall time\" \"monitor error\" \"output transfer error\" \"fixed location missing\"</p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.result)</div>\n<div class=\"line\"><span class=\"stringliteral\">&#39;success&#39;</span></div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a175caa08bc88deafc95796efb66b3fe5\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a175caa08bc88deafc95796efb66b3fe5\">&#9670;&nbsp;</a></span>completed()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.completed </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Return True if task executed and its command terminated normally. </p>\n<p>If True, the exit code of the command can be retrieved with exit_code. If False, the error condition can be retrieved with result. It must be called only after the task completes execution. </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># completed tasks with a failed command execution:</span></div>\n<div class=\"line\">&gt;&gt;&gt; print(t.completed())</div>\n<div class=\"line\"><span class=\"keyword\">True</span></div>\n<div class=\"line\">&gt;&gt;&gt; print(t.exit_code)</div>\n<div class=\"line\">1</div>\n<div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># task with an error condition:</span></div>\n<div class=\"line\">&gt;&gt;&gt; print(t.completed())</div>\n<div class=\"line\"><span class=\"keyword\">False</span></div>\n<div class=\"line\">&gt;&gt;&gt; print(t.result)</div>\n<div class=\"line\">max retries</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a3ba447d023b4da6a75a5cf78a7e5b23f\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a3ba447d023b4da6a75a5cf78a7e5b23f\">&#9670;&nbsp;</a></span>successful()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.successful </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Return True if task executed successfully, (i.e. </p>\n<p>its command terminated normally with exit code 0 and produced all its declared output files). Differs from <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#a175caa08bc88deafc95796efb66b3fe5\">ndcctools.taskvine.task.Task.completed</a> in that the exit code of the command should be zero. It must be called only after the task completes execution. </p><div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; <span class=\"comment\"># completed tasks with a failed command execution:</span></div>\n<div class=\"line\">&gt;&gt;&gt; print(t.completed())</div>\n<div class=\"line\"><span class=\"keyword\">True</span></div>\n<div class=\"line\">&gt;&gt;&gt; print(t.successful())</div>\n<div class=\"line\"><span class=\"keyword\">False</span></div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a6c02076702b58d7abfa6e17c31a2be7a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a6c02076702b58d7abfa6e17c31a2be7a\">&#9670;&nbsp;</a></span>get_metric()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.get_metric </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Return various integer performance metrics about a completed task. </p>\n<p>Must be called only after the task completes execution.</p>\n<p>Valid metric names:</p><ul>\n<li>time_when_submitted</li>\n<li>time_when_done</li>\n<li>time_when_commit_start</li>\n<li>time_when_commit_end</li>\n<li>time_when_retrieval</li>\n<li>time_workers_execute_last</li>\n<li>time_workers_execute_all</li>\n<li>time_workers_execute_exhaustion</li>\n<li>time_workers_execute_failure</li>\n<li>bytes_received</li>\n<li>bytes_sent</li>\n<li>bytes_transferred</li>\n</ul>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.get_metric(<span class=\"stringliteral\">&quot;total_submissions&quot;</span>)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a48e43c5a554f4611feaf3e5555f058a1\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a48e43c5a554f4611feaf3e5555f058a1\">&#9670;&nbsp;</a></span>addrport()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.addrport </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the address and port of the host on which the task ran. </p>\n<p>Must be called only after the task completes execution.</p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.host)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"abdb774d52d3d60bc2c3cca2d975c1e08\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#abdb774d52d3d60bc2c3cca2d975c1e08\">&#9670;&nbsp;</a></span>hostname()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.hostname </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the address and port of the host on which the task ran. </p>\n<p>Must be called only after the task completes execution.</p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.host)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"ab2bb494b7eacf612aa9752c06bb2a763\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ab2bb494b7eacf612aa9752c06bb2a763\">&#9670;&nbsp;</a></span>resources_measured()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.resources_measured </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the resources measured for the task execution if resource monitoring is enabled. </p>\n<p>Must be called only after the task completes execution. Valid fields:</p>\n<p>start: microseconds at the start of execution</p>\n<p>end: microseconds at the end of execution</p>\n<p>wall_time: microseconds spent during execution</p>\n<p>cpu_time: user + system time of the execution</p>\n<p>cores: peak number of cores used</p>\n<p>cores_avg: number of cores computed as cpu_time/wall_time</p>\n<p>gpus: peak number of gpus used</p>\n<p>max_concurrent_processes: the maximum number of processes running concurrently</p>\n<p>total_processes: count of all of the processes created</p>\n<p>virtual_memory: maximum virtual memory across all processes</p>\n<p>memory: maximum resident size across all processes</p>\n<p>swap_memory: maximum swap usage across all processes</p>\n<p>bytes_read: number of bytes read from disk</p>\n<p>bytes_written: number of bytes written to disk</p>\n<p>bytes_received: number of bytes read from the network</p>\n<p>bytes_sent: number of bytes written to the network</p>\n<p>bandwidth: maximum network bits/s (average over one minute)</p>\n<p>total_files: total maximum number of files and directories of all the working directories in the tree</p>\n<p>disk: size in MB of all working directories in the tree</p>\n<div class=\"fragment\"><div class=\"line\">&gt;&gt;&gt; print(t.resources_measured.memory)</div>\n</div><!-- fragment --> \n</div>\n</div>\n<a id=\"a1511c867b3bf46e15ff4b67a6a83ef3a\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1511c867b3bf46e15ff4b67a6a83ef3a\">&#9670;&nbsp;</a></span>limits_exceeded()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.limits_exceeded </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the resources the task exceeded. </p>\n<p>For valid field see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a>. </p>\n\n</div>\n</div>\n<a id=\"a1b4523512094f59883f734f7f287c401\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#a1b4523512094f59883f734f7f287c401\">&#9670;&nbsp;</a></span>resources_requested()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.resources_requested </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the resources the task requested to run. </p>\n<p>For valid fields see <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a>. </p>\n\n</div>\n</div>\n<a id=\"acf60223fbeac4d17e8fb6f69eb1d6422\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#acf60223fbeac4d17e8fb6f69eb1d6422\">&#9670;&nbsp;</a></span>resources_allocated()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.resources_allocated </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Get the resources allocated to the task in its latest attempt. </p>\n<p>For valid fields <a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html#ab2bb494b7eacf612aa9752c06bb2a763\">ndcctools.taskvine.task.Task.resources_measured</a>. </p>\n\n</div>\n</div>\n<a id=\"ac568ee89350dede20643ca88578517b1\"></a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ac568ee89350dede20643ca88578517b1\">&#9670;&nbsp;</a></span>add_nopen()</h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">def ndcctools.taskvine.task.Task.add_nopen </td>\n          <td>(</td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>self</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">&#160;</td>\n          <td class=\"paramname\"><em>manager</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n\n<p>Adds inputs for nopen library and rules file and sets LD_PRELOAD. </p>\n\n</div>\n</div>\n<hr/>The documentation for this class was generated from the following file:<ul>\n<li>task.py</li>\n</ul>\n</div><!-- contents -->\n</div><!-- doc-content -->\n<!-- start footer part -->\n<div id=\"nav-path\" class=\"navpath\"><!-- id is needed for treeview function! -->\n  <ul>\n    <li class=\"navelem\"><a class=\"el\" href=\"namespacendcctools.html\">ndcctools</a></li><li class=\"navelem\"><a class=\"el\" href=\"namespacendcctools_1_1taskvine.html\">taskvine</a></li><li class=\"navelem\"><a class=\"el\" href=\"namespacendcctools_1_1taskvine_1_1task.html\">task</a></li><li class=\"navelem\"><a class=\"el\" href=\"classndcctools_1_1taskvine_1_1task_1_1Task.html\">Task</a></li>\n    <li class=\"footer\">Generated by\n    <a href=\"http://www.doxygen.org/index.html\">\n    <img class=\"footer\" src=\"doxygen.png\" alt=\"doxygen\"/></a> 1.8.17 </li>\n  </ul>\n</div>\n</body>\n</html>\n",
    "prompts": [
        {
            "id": "taskvine0",
            "content": "Write a Python TaskVine application to get the current date on a worker machine. The date must be stored to an output file named \"current_date\".",
            "response": "```python\nfrom ndcctools.taskvine import Task, Manager\n\n# Define the command to get the current date\ncommand = \"date > current_date\"\n\n# Create a Task object\ntask = Task(command)\n\n# Create a Manager object\nmanager = Manager()\n\n# Submit the task to the manager\nmanager.submit(task)\n\n# Wait for the task to complete\nmanager.wait()\n\n# Print the result\nprint(\"Task completed. The current date is stored in 'current_date'.\")\n```"
        },
        {
            "id": "taskvine1",
            "content": "Write a Python TaskVine application to count the number of times the keywords \"wealth\", \"nation\", \"labour\", \"price\", \"nature\", and \"commodity\" appear in Adam Smith's Wealth of Nations. The text is available at \"https://www.gutenberg.org/cache/epub/3300/pg3300.txt\".",
            "response": "```python\nimport requests\nfrom ndcctools.taskvine import Manager\n\n# Define the keywords to search for\nkeywords = [\"wealth\", \"nation\", \"labour\", \"price\", \"nature\", \"commodity\"]\n\ndef count_keywords(text):\n    \"\"\"Count occurrences of each keyword in the text.\"\"\"\n    counts = {keyword: text.lower().count(keyword) for keyword in keywords}\n    return counts\n\ndef main():\n    # Fetch the text from the URL\n    url = \"https://www.gutenberg.org/cache/epub/3300/pg3300.txt\"\n    response = requests.get(url)\n    text = response.text\n\n    # Count the keywords\n    keyword_counts = count_keywords(text)\n\n    # Print the results\n    for keyword, count in keyword_counts.items():\n        print(f\"The keyword '{keyword}' appears {count} times.\")\n\nif __name__ == \"__main__\":\n    # Create a TaskVine manager\n    manager = Manager()\n    \n    # Submit the main function as a task\n    manager.submit(main)\n```\n\nThis code defines a Python TaskVine application that fetches the text of \"Wealth of Nations\" from the provided URL, counts the occurrences of specified keywords, and prints the results. The `count_keywords` function performs the counting, and the `main` function orchestrates the fetching and counting process. The application is submitted to the TaskVine manager for execution."
        },
        {
            "id": "taskvine2",
            "content": "Write a Python TaskVine application to run my program \"script.sh\" with various input arguments and organizes all output data. \"script.sh\" takes, as input, an integer and two files. \"script.sh\" outputs a file named \"output{i}.txt\" where \"{i}\" is the input integer. The application must run \"script.sh\" with input integers 1-1000 and input files \"file1.input\" and \"file2.input\" which are stored in the directory \"script_inputs\". The application must store all output files in a directory named \"script_outputs\".",
            "response": "```python\nimport os\nfrom ndcctools.taskvine import Manager, Task\n\n# Create the manager\nmanager = Manager(name=\"ScriptRunner\", run_info_path=\"script_outputs\")\n\n# Create output directory if it doesn't exist\noutput_dir = \"script_outputs\"\nos.makedirs(output_dir, exist_ok=True)\n\n# Define the input files\ninput_file1 = \"script_inputs/file1.input\"\ninput_file2 = \"script_inputs/file2.input\"\n\n# Function to create and submit tasks\ndef submit_tasks():\n    for i in range(1, 1001):\n        # Define the output file name\n        output_file = os.path.join(output_dir, f\"output{i}.txt\")\n        \n        # Create the task\n        task = Task(command=f\"./script.sh {i} {input_file1} {input_file2} > {output_file}\")\n        \n        # Submit the task to the manager\n        manager.submit(task)\n\n# Submit the tasks\nsubmit_tasks()\n\n# Wait for all tasks to complete\nmanager.wait()\n```"
        },
        {
            "id": "taskvine3",
            "content": "Write a Python TaskVine application to execute a pipeline of shell scripts. I have the script \"script1.sh\" which outputs a file named \"intermediary.out\" upon completion. I also have the scripts \"script2.sh\" and \"script3.sh\"  which both accept an input file as a command line argument. \"script2.sh\" and \"script3.sh\" must both receive \"intermediary.out\" as the input. Finally, \"script2.sh\" and \"script3.sh\" output files named \"script2.out\" and \"script3.out\", respectively. Save these outputs files on the host machine. \"intermediary.out\" need not be saved to the host machine.",
            "response": "```python\nfrom ndcctools.taskvine import manager, task\n\n# Create a manager instance\nmgr = manager.Manager()\n\n# Step 1: Define the first task to run script1.sh\ntask1 = task.Task(command=\"./script1.sh\")\n# Submit the first task\nmgr.submit(task1)\n\n# Step 2: Define the second task to run script2.sh with intermediary.out as input\ntask2 = task.Task(command=\"./script2.sh intermediary.out\")\n# Add output file for script2\ntask2.add_output(mgr.declare_file(\"script2.out\"))\n# Submit the second task\nmgr.submit(task2)\n\n# Step 3: Define the third task to run script3.sh with intermediary.out as input\ntask3 = task.Task(command=\"./script3.sh intermediary.out\")\n# Add output file for script3\ntask3.add_output(mgr.declare_file(\"script3.out\"))\n# Submit the third task\nmgr.submit(task3)\n\n# Wait for all tasks to complete\nmgr.wait()\n```"
        },
        {
            "id": "taskvine4",
            "content": "Write a Python TaskVine application to run my GPU-accelerated program. The program binary is stored at \"./train_demo\". The program requires that the worker machine has the feature \"NVIDIA RTX 4090\". Upon completion, the program outputs \"model.tar.gz\". The output file must be saved to the host machine.",
            "response": "```python\nfrom ndcctools.taskvine import manager, task\n\n# Create a TaskVine manager\nmgr = manager.Manager()\n\n# Define the task command\ncommand = \"./train_demo\"\n\n# Create a new task\ngpu_task = task.Task(command)\n\n# Set the required GPU feature\ngpu_task.add_feature(\"NVIDIA RTX 4090\")\n\n# Specify the output file\noutput_file = mgr.declare_file(\"model.tar.gz\")\ngpu_task.add_output(output_file, \"model.tar.gz\")\n\n# Submit the task to the manager\nmgr.submit(gpu_task)\n\n# Wait for the task to complete\nmgr.wait()\n```"
        },
        {
            "id": "taskvine5",
            "content": "Write a Python TaskVine application to compile and test my project stored at \"complex_project/\". To compile the project, run the \"make all\" command in the project's root directory. Then, to test the project, run \"make test\". The compilation and test must use at most 4 cores, 1024 MB of memory, and 2048 MB of disk. Enable resource monitoring to track resource usage, but do not terminate the task if it overuses resources. When the task completes, print the task's exit code and standard output. For each resource that the task overused, print the resource and by how much it overused.",
            "response": "```python\nfrom ndcctools.taskvine import manager, task\n\n# Create a manager instance\nmgr = manager.Manager()\n\n# Define the task to compile the project\ncompile_task = task.Task(command=\"make all\")\ncompile_task.set_cores(4)\ncompile_task.set_memory(1024)  # in MB\ncompile_task.set_disk(2048)     # in MB\ncompile_task.set_category(\"compile\")\ncompile_task.set_priority(1)\n\n# Define the task to test the project\ntest_task = task.Task(command=\"make test\")\ntest_task.set_cores(4)\ntest_task.set_memory(1024)  # in MB\ntest_task.set_disk(2048)     # in MB\ntest_task.set_category(\"test\")\ntest_task.set_priority(1)\n\n# Enable resource monitoring\nmgr.enable_monitoring()\n\n# Submit the compile task\ncompile_task_id = mgr.submit(compile_task)\n\n# Wait for the compile task to complete\nmgr.wait_for_task_id(compile_task_id)\n\n# Print the exit code and standard output of the compile task\nprint(f\"Compile Task Exit Code: {compile_task.exit_code}\")\nprint(f\"Compile Task Standard Output: {compile_task.std_output}\")\n\n# Check for resource overuse\nif compile_task.limits_exceeded():\n    print(\"Compile Task Resource Overuse:\")\n    for resource in compile_task.resources_measured:\n        if compile_task.resources_measured[resource] > compile_task.resources_requested[resource]:\n            overuse_amount = compile_task.resources_measured[resource] - compile_task.resources_requested[resource]\n            print(f\"{resource}: Overused by {overuse_amount}\")\n\n# Submit the test task\ntest_task_id = mgr.submit(test_task)\n\n# Wait for the test task to complete\nmgr.wait_for_task_id(test_task_id)\n\n# Print the exit code and standard output of the test task\nprint(f\"Test Task Exit Code: {test_task.exit_code}\")\nprint(f\"Test Task Standard Output: {test_task.std_output}\")\n\n# Check for resource overuse\nif test_task.limits_exceeded():\n    print(\"Test Task Resource Overuse:\")\n    for resource in test_task.resources_measured:\n        if test_task.resources_measured[resource] > test_task.resources_requested[resource]:\n            overuse_amount = test_task.resources_measured[resource] - test_task.resources_requested[resource]\n            print(f\"{resource}: Overused by {overuse_amount}\")\n```"
        },
        {
            "id": "taskvine6",
            "content": "Write a Python TaskVine application that executes multiple programs with different levels of resource requirements. The two task categories must be named \"intensive\" and \"light\". The \"intensive\" tasks require 8 cores and 16 GB of memory. The \"light\" tasks require 1 core and 2 GB of memory. In the intensive category, submit 10 tasks to execute the shell script \"intensive.sh\". In the light category, submit 100 tasks to execute the shell script \"light.sh\" Print the standard output of each task upon completion.",
            "response": "```python\nfrom ndcctools.taskvine.manager import Manager\nfrom ndcctools.taskvine.task import Task\n\n# Create a manager instance\nmanager = Manager(name=\"Resource Manager\")\n\n# Define the intensive and light task categories\nintensive_category = \"intensive\"\nlight_category = \"light\"\n\n# Set resource requirements for each category\nmanager.set_category_resources_max(intensive_category, {'cores': 8, 'memory': 16384})  # 16 GB\nmanager.set_category_resources_max(light_category, {'cores': 1, 'memory': 2048})      # 2 GB\n\n# Submit intensive tasks\nfor i in range(10):\n    task = Task(command=\"./intensive.sh\")\n    task.set_category(intensive_category)\n    manager.submit(task)\n\n# Submit light tasks\nfor i in range(100):\n    task = Task(command=\"./light.sh\")\n    task.set_category(light_category)\n    manager.submit(task)\n\n# Wait for all tasks to complete and print their standard output\nfor task in manager.wait(timeout=\"wait_forever\"):\n    print(f\"Task ID: {task.id}, Standard Output: {task.std_output}\")\n```"
        },
        {
            "id": "taskvine7",
            "content": "Write a Python TaskVine application to perform matrix inversion and transposition. The matrix computations must be defined in Python functions and added to a TaskVine library called \"matrix_library\". The user must specify the size, m x n,  of the matrix and the number of matrices, i, on which to perform computation. The application must randomly generate i matrices and for each matrix, print the matrix, print the inverse matrix, and print the transposed matrix.",
            "response": "```python\nimport numpy as np\nfrom ndcctools.taskvine.manager import Manager\n\n# Define the matrix inversion and transposition functions\ndef invert_matrix(matrix):\n    return np.linalg.inv(matrix)\n\ndef transpose_matrix(matrix):\n    return np.transpose(matrix)\n\n# Create a TaskVine manager\nmanager = Manager(name=\"MatrixComputationManager\")\n\n# User input for matrix size and number of matrices\nm = int(input(\"Enter the number of rows (m) for the matrices: \"))\nn = int(input(\"Enter the number of columns (n) for the matrices: \"))\ni = int(input(\"Enter the number of matrices to generate: \"))\n\n# Create a library for matrix operations\nlibrary = manager.create_library_from_functions(\"matrix_library\", invert_matrix, transpose_matrix)\n\n# Generate i random matrices and perform computations\nfor index in range(i):\n    # Generate a random matrix\n    matrix = np.random.rand(m, n)\n    \n    # Print the original matrix\n    print(f\"Matrix {index + 1}:\\n{matrix}\")\n    \n    # Compute and print the inverse if the matrix is square\n    if m == n:\n        inverse_matrix = invert_matrix(matrix)\n        print(f\"Inverse of Matrix {index + 1}:\\n{inverse_matrix}\")\n    else:\n        print(f\"Matrix {index + 1} is not square, cannot compute inverse.\")\n    \n    # Compute and print the transposed matrix\n    transposed_matrix = transpose_matrix(matrix)\n    print(f\"Transposed of Matrix {index + 1}:\\n{transposed_matrix}\")\n\n# Submit the task to the manager\nmanager.submit(library)\n``` \n\nThis code defines a TaskVine application that generates random matrices, computes their inverses (if applicable), and transposes them. The user specifies the dimensions of the matrices and the number of matrices to generate. The matrix operations are encapsulated in a library called \"matrix_library\"."
        },
        {
            "id": "taskvine8",
            "content": "Write a Python Taskvine application to fetch the titles of multiple news webpages. The webpage contents must be downloaded asynchronously using the TaskVine futures executor. Print the URL and title of each webpage in order of the completion of each task. The webpages I am interested in are \"https://abcnews.com\", \"https://apnews.com\", \"https://axios.com\", \"https://cnn.com\", \"https://nbcnews.com\", \"https://nytimes.com\", \"https://reuters.com\", \"https://washingtonpost.com\", \"https://wsj.com\".",
            "response": "```python\nimport requests\nfrom ndcctools.taskvine import manager, task\nfrom ndcctools.taskvine.futures import Future\n\n# Define a function to fetch the title of a webpage\ndef fetch_title(url):\n    response = requests.get(url)\n    response.raise_for_status()  # Raise an error for bad responses\n    title_start = response.text.find('<title>') + len('<title>')\n    title_end = response.text.find('</title>', title_start)\n    title = response.text[title_start:title_end]\n    return url, title\n\n# Create a TaskVine manager\nmanager_instance = manager.Manager()\n\n# List of URLs to fetch\nurls = [\n    \"https://abcnews.com\",\n    \"https://apnews.com\",\n    \"https://axios.com\",\n    \"https://cnn.com\",\n    \"https://nbcnews.com\",\n    \"https://nytimes.com\",\n    \"https://reuters.com\",\n    \"https://washingtonpost.com\",\n    \"https://wsj.com\"\n]\n\n# Create a list to hold future tasks\nfutures = []\n\n# Submit tasks to fetch titles asynchronously\nfor url in urls:\n    task_instance = task.Task(fetch_title, url)\n    future = manager_instance.submit(task_instance)\n    futures.append(future)\n\n# Wait for tasks to complete and print results in order of completion\nfor future in futures:\n    result = future.wait()\n    print(f\"URL: {result[0]}, Title: {result[1]}\")\n```"
        },
        {
            "id": "taskvine9",
            "content": "Write a Python TaskVine application to get the current date on a worker machine. The date must be stored to an output file named \"current_date\". To prevent an unwanted worker from connecting to the manager, use the password stored in the file \"taskvine.password\". Further, encrypt communication between the manager and worker with SSL using the \"key.pem\" and \"certificate.pem\" files.",
            "response": "```python\nfrom ndcctools.taskvine import manager, task\n\n# Define the command to get the current date and store it in a file\ncommand = \"date > current_date\"\n\n# Create a Task object\ndate_task = task.Task(command)\n\n# Create a Manager object with SSL and password protection\nmanager_instance = manager.Manager(\n    port=0,  # Random port\n    name=\"DateFetcher\",\n    shutdown=False,\n    run_info_path=\"vine-run-info\",\n    ssl=(\"key.pem\", \"certificate.pem\"),\n)\n\n# Set the password for the manager from the file\nwith open(\"taskvine.password\", \"r\") as password_file:\n    password = password_file.read().strip()\nmanager_instance.set_password(password)\n\n# Submit the task to the manager\nmanager_instance.submit(date_task)\n\n# Wait for the task to complete\nmanager_instance.wait()\n```"
        }
    ]
}
